"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
function useKeyPress(targetKey, useDependencies) {
    // State for keeping track of whether key is pressed
    var _a = react_1.useState(false), keyPressed = _a[0], setKeyPressed = _a[1];
    // Add event listeners
    react_1.useEffect(function () {
        // If pressed key is our target key then set to true
        function downHandler(_a) {
            var key = _a.key;
            if (key === targetKey) {
                setKeyPressed(true);
            }
        }
        // If released key is our target key then set to false
        function upHandler(_a) {
            var key = _a.key;
            if (key === targetKey) {
                setKeyPressed(false);
            }
        }
        window.addEventListener('keydown', downHandler);
        window.addEventListener('keyup', upHandler);
        // Remove event listeners on cleanup
        return function () {
            window.removeEventListener('keydown', downHandler);
            window.removeEventListener('keyup', upHandler);
        };
    }, 
    // eslint-disable-next-line react-hooks/exhaustive-deps
    useDependencies ? [targetKey] : []);
    return keyPressed;
}
exports.useKeyPress = useKeyPress;
