import { useState, useEffect } from 'react';
var isClient = typeof window === 'object';
function getSize() {
    return {
        width: isClient ? window.innerWidth : undefined,
        height: isClient ? window.innerHeight : undefined,
    };
}
export function useWindowSize() {
    var _a = useState(getSize), windowSize = _a[0], setWindowSize = _a[1];
    useEffect(function () {
        if (!isClient) {
            return;
        }
        function handleResize() {
            setWindowSize(getSize());
        }
        window.addEventListener('resize', handleResize);
        return function () { return window.removeEventListener('resize', handleResize); };
    }, []); // Empty array ensures that effect is only run on mount and unmount
    return windowSize;
}
