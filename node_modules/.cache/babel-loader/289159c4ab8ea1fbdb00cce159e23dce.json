{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Hiv/EnrolledPatientsDashboard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'; // {/* Auto textfield complete */}\n\nimport TextField from '@material-ui/core/TextField';\nimport { MdDashboard, MdContacts } from 'react-icons/md';\nimport { GiFiles, GiTestTubes } from 'react-icons/gi';\nimport { FaBriefcaseMedical } from \"react-icons/fa\"; //{/*  Check box list */}\n\nimport { Line } from 'react-chartjs-2';\nimport { ViralLoad, Weight } from 'demos/patientVIral'; //the paper for the patient detail at the header \n\nimport PatientAlert from 'components/PatientDashboard/PatientAlert';\nimport PatientAllergies from 'components/PatientDashboard/PatientAllergies';\nimport PatientVitals from 'components/PatientDashboard/PatientVitals';\nimport PatientLabTest from 'components/PatientDashboard/PatientLabTest';\nimport ClinicalHistory from 'components/PatientDashboard/ClinicalHistory';\nimport Consultation from './consulatation/consultation';\nimport PatientDetailCard from 'components/Functions/PatientDetailCard';\nimport TestOrder from './TestOrder/TestOrder';\nimport Medication from './Medication/Medication';\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-force-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-force-tab-\".concat(index)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), value === index && React.createElement(Box, {\n    p: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-force-tab-\".concat(index),\n    'aria-controls': \"scrollable-force-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin: theme.spacing(7),\n      bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n      },\n      title: {\n        fontSize: 12\n      },\n      pos: {\n        fontSize: 11\n      },\n      cardContent: {\n        padding: 2\n      },\n      cardroot: {\n        margin: theme.spacing(1),\n        height: 250 + 'px !important'\n      }\n    },\n    alertmsge: {\n      marginTop: theme.spacing(2)\n    },\n    rootaccordia: {\n      width: '100%'\n    },\n    accordiaheading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    allergiesroot: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5)\n      }\n    },\n    checkboxroot: {\n      display: 'flex'\n    },\n    formControl: {\n      margin: theme.spacing(3)\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    formroot: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15)\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20\n    },\n    details: {\n      alignItems: 'center'\n    },\n    column: {\n      flexBasis: '33.33%'\n    },\n    helper: {\n      borderLeft: \"2px solid \".concat(theme.palette.divider),\n      padding: theme.spacing(1, 2)\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    inforoot: {\n      width: '95%',\n      margin: 20,\n      backgroundColor: '#eee'\n    }\n  };\n});\nvar cardStyle = {\n  borbderColor: '#fff',\n  marginBottom: 10\n};\nvar cardHeight = {\n  height: 200,\n  position: 'relative',\n  overflow: 'auto'\n};\nexport default function ScrollableTabsButtonForce(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inforoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(PatientDetailCard, {\n    getpatientdetails: props.location.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    variant: \"scrollable\",\n    scrollButtons: \"on\",\n    indicatorColor: \"primary\",\n    textColor: \"white\",\n    \"aria-label\": \"scrollable force tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Tab, Object.assign({\n    className: classes.title,\n    label: \"Dashboard\",\n    icon: React.createElement(MdDashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })\n  }, a11yProps(0), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    className: classes.title,\n    label: \"Consultation\",\n    icon: React.createElement(MdContacts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })\n  }, a11yProps(1), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    className: classes.title,\n    label: \"Service Form\",\n    icon: React.createElement(GiFiles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })\n  }, a11yProps(2), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    className: classes.title,\n    label: \"Test Order\",\n    icon: React.createElement(GiTestTubes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })\n  }, a11yProps(3), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    className: classes.title,\n    label: \"Medication\",\n    icon: React.createElement(FaBriefcaseMedical, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })\n  }, a11yProps(4), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(PatientAlert, {\n    height: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(PatientAllergies, {\n    height: cardHeight,\n    addstatus: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(PatientVitals, {\n    height: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(PatientLabTest, {\n    height: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    style: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Viral Load\"), React.createElement(Line, {\n    data: ViralLoad({\n      fill: false\n    }, {\n      fill: false\n    }),\n    style: {\n      height: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    style: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Weight\"), React.createElement(Line, {\n    data: Weight({\n      fill: false\n    }, {\n      fill: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    style: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(ClinicalHistory, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  })))))), React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(Consultation, {\n    getpatientdetails: props.location.state,\n    height: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })), React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }))), React.createElement(TabPanel, {\n    value: value,\n    index: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, React.createElement(TestOrder, {\n    getpatientdetails: props.location.state,\n    height: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  })), React.createElement(TabPanel, {\n    value: value,\n    index: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, React.createElement(Medication, {\n    getpatientdetails: props.location.state,\n    height: cardHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  })), React.createElement(TabPanel, {\n    value: value,\n    index: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"Pulse : \", React.createElement(\"span\", {\n    style: {\n      fontSize: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, \"56pm\"))))))), React.createElement(Grid, {\n    item: true,\n    xs: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, \"Drug Order\"), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, \"Pulse : \", React.createElement(\"span\", {\n    style: {\n      fontSize: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, \"56pm\"))))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"Drug Order\"), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, \"Pulse : \", React.createElement(\"span\", {\n    style: {\n      fontSize: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, \"56pm\"))))))))), React.createElement(TabPanel, {\n    value: value,\n    index: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, \"Item Seven\"));\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Hiv/EnrolledPatientsDashboard.jsx"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Grid","Card","CardContent","TextField","MdDashboard","MdContacts","GiFiles","GiTestTubes","FaBriefcaseMedical","Line","ViralLoad","Weight","PatientAlert","PatientAllergies","PatientVitals","PatientLabTest","ClinicalHistory","Consultation","PatientDetailCard","TestOrder","Medication","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root2","flexGrow","width","backgroundColor","palette","background","paper","margin","spacing","bullet","display","transform","title","fontSize","pos","cardContent","padding","cardroot","height","alertmsge","marginTop","rootaccordia","accordiaheading","typography","pxToRem","fontWeight","fontWeightRegular","allergiesroot","justifyContent","flexWrap","checkboxroot","formControl","root","formroot","heading","secondaryHeading","color","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","link","primary","main","textDecoration","inforoot","cardStyle","borbderColor","marginBottom","cardHeight","position","overflow","ScrollableTabsButtonForce","classes","useState","setValue","handleChange","event","newValue","location","state","fill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n// {/* Auto textfield complete */}\nimport TextField from '@material-ui/core/TextField';\nimport {\n    MdDashboard,\n    MdContacts\n  } from 'react-icons/md';\nimport {GiFiles,GiTestTubes } from 'react-icons/gi';  \nimport { FaBriefcaseMedical} from \"react-icons/fa\"; \n//{/*  Check box list */}\nimport { Line } from 'react-chartjs-2';\nimport {\n    ViralLoad,Weight\n  } from 'demos/patientVIral';\n\n\n\n//the paper for the patient detail at the header \n\nimport PatientAlert from 'components/PatientDashboard/PatientAlert';\nimport PatientAllergies from 'components/PatientDashboard/PatientAllergies';\nimport PatientVitals from 'components/PatientDashboard/PatientVitals';\nimport PatientLabTest from 'components/PatientDashboard/PatientLabTest';\nimport ClinicalHistory from 'components/PatientDashboard/ClinicalHistory';\nimport Consultation from './consulatation/consultation';\nimport PatientDetailCard from 'components/Functions/PatientDetailCard';\nimport TestOrder from './TestOrder/TestOrder';\nimport Medication from './Medication/Medication';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={5}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root2: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    margin:theme.spacing(7),\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n      },\n      title: {\n        fontSize: 12,\n          \n      },\n      pos: {\n        fontSize: 11,\n      },\n    cardContent:{\n        padding: 2,\n    },\n    cardroot:{\n        margin:theme.spacing(1),\n        height: 250 + 'px !important' ,\n    }\n    \n    },\n    alertmsge:{\n        marginTop: theme.spacing(2),\n    },\n    rootaccordia: {\n        width: '100%',\n    },\n    accordiaheading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    allergiesroot: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n        margin: theme.spacing(0.5),\n        },\n    },\n    \n    checkboxroot: {\n        display: 'flex',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n    \n    root: {\n        '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n        },\n        \n    },\n\n    formroot: {\n        '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n        },\n    },\n\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '33.33%',\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: theme.spacing(1, 2),\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n        textDecoration: 'underline',\n        },\n    },\n    inforoot: {\n        width: '95%',\n        margin: 20,\n        backgroundColor: '#eee',\n    },\n    }));\n    const cardStyle = {\n        borbderColor: '#fff',\n        marginBottom: 10,\n    };\n    const cardHeight = {\n        height: 200, \n        position: 'relative',\n        overflow: 'auto',\n    };\n\n\n\n\nexport default function ScrollableTabsButtonForce(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    \n  };\n\n\n\n\n  return (\n    <div className={classes.root}>\n        <div className={classes.inforoot} >\n            <PatientDetailCard getpatientdetails={props.location.state }/>   \n        </div> \n\n      <AppBar position=\"static\" >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"white\"\n          aria-label=\"scrollable force tabs example\"\n        >\n          <Tab className={classes.title} label=\"Dashboard\" icon={<MdDashboard />} {...a11yProps(0)} />         \n          <Tab className={classes.title} label=\"Consultation\" icon={<MdContacts />} {...a11yProps(1)} />\n          <Tab className={classes.title} label=\"Service Form\" icon={<GiFiles />} {...a11yProps(2)} />\n          <Tab className={classes.title} label=\"Test Order\" icon={<GiTestTubes />} {...a11yProps(3)} />\n          <Tab className={classes.title} label=\"Medication\" icon={<FaBriefcaseMedical />} {...a11yProps(4)} />\n          {/* <Tab className={classes.title} label=\"Others\" icon={<FaChartLine />} {...a11yProps(5)}  onClick={handleClick}/> */}\n          \n          \n        </Tabs>\n        <div>\n     \n    </div>\n      </AppBar>\n      {/* The DashBoad Tab  */}\n      <TabPanel value={value} index={0}>\n            <Grid container spacing={2}>\n                <Grid item xs='6' >                    \n                    <PatientAlert height={cardHeight}/>   \n                </Grid>\n                <Grid item xs='6'>\n                    <PatientAllergies height={cardHeight} addstatus={false}/>   \n                </Grid>\n                <Grid item xs='6' >                    \n                    <PatientVitals height={cardHeight}/> \n                </Grid>\n                <Grid item xs='6' >\n                                           \n                    <PatientLabTest height={cardHeight}/>\n                </Grid>\n                <Grid item xs='6' >\n               \n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            Viral Load\n                            </Typography>\n                            <Line data={ViralLoad({ fill: false }, { fill: false })} style={{ height: 200 }}/>                      \n                        </CardContent>                      \n                    </Card>\n                </Grid>\n                <Grid item xs='6' >\n               \n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            Weight \n                            </Typography>\n                            <Line data={Weight({ fill: false }, { fill: false })}/>                      \n                        </CardContent>                      \n                    </Card>\n                </Grid>\n                <Grid item xs='12' >\n               \n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>\n                            <ClinicalHistory />                     \n                        </CardContent>                      \n                    </Card>\n                </Grid>\n                {/* <Grid item xs='6' >              \n                    \n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>  \n                            <LaboratoryPharmacyHistory />\n                        </CardContent>                      \n                    </Card>                          \n                </Grid> */}\n                {/* <Grid item xs='6'>               \n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            Forms\n                            </Typography>\n                                <Grid container spacing={12}>\n                                    <Grid item xs='12'>\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Tobaclusis       20/01/2020\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Tobaclusis       20/01/2020\n                                        </Typography>\n                                    </Grid>\n                                    \n                                </Grid>                               \n                        </CardContent>                      \n                    </Card>\n                </Grid> */}\n               {/* <Grid item xs='6' >\n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                Relatioship\n                                <Link to=\"/enrolled-patients\">\n                                    <Button color=\"primary\" className=\" float-right mr-1\" >\n                                            <FaPlusCircle/>  {' '} ADD\n                                    </Button>\n                                </Link>\n                            </Typography>\n                                <Grid container spacing={12}>\n                                    <Grid item xs='12'>\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                        <Card className={classes.cardroot} >\n                                        <CardContent>\n                                            <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\n                                            <ListItem button>\n                                                \n                                                <ListItemText primary=\"Chelsea Otakan\" />\n                                            </ListItem>\n                                            <ListItem button>\n                                                <ListItemText  primary=\"Eric Hoffman\" />\n                                            </ListItem>\n                                            </List>\n                                        </CardContent>\n                                        </Card>     \n                                        </Typography>\n                                    </Grid>                               \n                                </Grid>                               \n                        </CardContent>                      \n                    </Card>\n                </Grid> */}\n                {/* <Grid item xs='6'>               \n                    <Card className={classes.cardroot} style={cardHeight}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                Active Programs\n                            </Typography>\n                                <Grid container spacing={12}>\n                                    <Grid item xs='12'>\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Tobaclusis       20/01/2020\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Tobaclusis       20/01/2020\n                                        </Typography>\n                                    </Grid>\n                                    \n                                </Grid>                               \n                        </CardContent>                      \n                    </Card>\n                </Grid> */}\n                \n            </Grid> \n\n      </TabPanel>\n{/* End of dashboard */}\n\n{/* Begining of Service Form */}\n<TabPanel value={value} index={1}>\n \n            <Consultation getpatientdetails={props.location.state } height={cardHeight}/>\n\n</TabPanel>     \n {/* Begining of consultation  */}\n <TabPanel value={value} index={2}>\n      <Grid container spacing={2}>\n                <Grid item xs='12'> \n\n                </Grid>\n        </Grid>\n</TabPanel>\n\n      <TabPanel value={value} index={3}>\n        <TestOrder getpatientdetails={props.location.state } height={cardHeight}/>\n      </TabPanel>\n    {/* End of consultation */}\n    <TabPanel value={value} index={4}>\n        {/* Card stats */}\n        <Medication getpatientdetails={props.location.state } height={cardHeight}/>\n\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n      <Grid container spacing={7} > \n                <Grid item xs='7'>                    \n                    <Card className={classes.cardroot}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            \n                            </Typography>\n                                <Grid >\n                                    <Grid item xs='6'>\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Pulse : <span style={{fontSize: 'bold'}}>56pm</span>\n                                               \n                                        </Typography>\n                                    </Grid>\n                                    \n                                </Grid>                               \n                        </CardContent>                      \n                        </Card>                     \n                </Grid>\n                \n                <Grid item xs='5'>                    \n                    <Card >\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            Drug Order \n                            </Typography>\n                                <Grid container >\n                                    <Grid item >\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Pulse : <span style={{fontSize: 'bold'}}>56pm</span>\n                                               \n                                        </Typography>\n                                    </Grid>\n                                    \n                                </Grid>                               \n                        </CardContent>                      \n                        </Card>                     \n                </Grid>\n                <br/>\n                <Grid item xs='7'>                    \n                    <Card >\n                        <CardContent>\n                            <Typography className={classes.title} color=\"primary\" gutterBottom>\n                            Drug Order \n                            </Typography>\n                                <Grid container >\n                                    <Grid item >\n                                        <Typography className={classes.pos} color=\"textSecondary\" >\n                                                Pulse : <span style={{fontSize: 'bold'}}>56pm</span>\n                                               \n                                        </Typography>\n                                    </Grid>\n                                    \n                                </Grid>                               \n                        </CardContent>                      \n                        </Card>                     \n                </Grid>\n             \n            \n            </Grid>\n      </TabPanel>\n      \n\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}