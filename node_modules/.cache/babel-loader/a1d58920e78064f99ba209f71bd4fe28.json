{"ast":null,"code":"import _defineProperty from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/CheckIn/CheckInList.jsx\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useState, useEffect } from 'react';\nimport { MdDashboard, MdCancel } from 'react-icons/md';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaUserCheck } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader, Col, FormGroup, Input, Label, Row, Form } from 'reactstrap'; //Date Picker\n\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport Spinner from 'react-bootstrap/Spinner'; // React Notification\n\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport axios from 'axios';\nimport { url } from 'axios/url'; //Dtate Picker package\n\nMoment.locale('en');\nmomentLocalizer();\nvar useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 11\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function (theme) {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n})(TableRow);\nexport default function CheckInList(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1]; //Modal state\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  }; //end og modal state\n\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1]; //Get list of Visit/checkin patients API \n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var apipatient = url + \"patients\";\n  useEffect(function () {\n    var GetData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios(apipatient);\n\n              case 2:\n                result = _context.sent;\n                setData(result.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function GetData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    GetData();\n  }, []); //get the user that need to be checked in \n\n  var _useState5 = useState({\n    username: '',\n    name: '',\n    email: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      patientrow = _useState6[0],\n      setpatientValue = _useState6[1];\n\n  var getUsermodal = function getUsermodal(patientrow) {\n    // setuservalue(user);\n    setModal(!modal);\n  }; //Save Checkedin \n\n\n  var _useState7 = useState({\n    dateVisitStart: '',\n    timeVisitStart: '',\n    visitTypeId: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checkin = _useState8[0],\n      setcheckedin = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showLoading = _useState10[0],\n      setShowLoading = _useState10[1];\n\n  var apiUrl = url + \"visits\";\n\n  var saveCheckedin = function saveCheckedin(e) {\n    e.preventDefault();\n    var data = {\n      dateVisitStart: '2020-11-03',\n      timeVisitStart: '07:00 AM',\n      visitTypeId: '2',\n      patientId: '2'\n    };\n    console.log(data);\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/checkedin-patients');\n      toast.success(\"Patient Checked In was Successful!\");\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      setShowLoading(false);\n      setcheckedin(false); // console.log(\"Error in CreateBook!\");\n      //toast.error(\"Something went wrong!\");\n    });\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var onChange = function onChange(e) {\n    e.persist();\n    setcheckedin(_objectSpread({}, checkin, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    autoClose: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Patient ID\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Patient Name\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Age \"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Action\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return React.createElement(StyledTableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, row.id), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, row.firstName, \" \", ' ', \" \", row.lastName), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, row.mobilePhoneNumber), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, row.dob), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Patient Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/data-table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Patient Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(MdDashboard, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })))), React.createElement(Tooltip, {\n      title: \"check in Patient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"check in Patient\",\n      onClick: function onClick() {\n        getUsermodal(setpatientValue(row.firstName));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(FaUserCheck, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Closed Checked In Patient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Closed Checked In Patient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(MdCancel, {\n      size: 20,\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })))));\n  }))), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: saveCheckedin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Check In Patient \"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"hidden\",\n    name: \"patientId\",\n    value: patientrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"qualification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Visit Type\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"visitTypeId\",\n    value: checkin.visitTypeId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Booked\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Unbooked\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Date Of Visit\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dateVisitStart\",\n    id: \"dateVisitStart\",\n    value: checkin.dateVisitStart,\n    defaultValue: new Date(),\n    max: new Date(),\n    onChange: function onChange(value1) {\n      return setcheckedin(_objectSpread({}, checkin, {\n        dateVisitStart: value1\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Time of Visit\"), React.createElement(DateTimePicker, {\n    date: false,\n    name: \"timeVisitStart\",\n    id: \"timeVisitStart\",\n    value: checkin.timeVisitStart,\n    onChange: function onChange(value1) {\n      return setcheckedin(_objectSpread({}, checkin, {\n        timeVisitStart: value1\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Loading...\")))), React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Check In\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"Close\"))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 15],\n    component: \"div\",\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/CheckIn/CheckInList.jsx"],"names":["React","makeStyles","withStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useState","useEffect","MdDashboard","MdCancel","Tooltip","IconButton","FaUserCheck","Link","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","FormGroup","Input","Label","Row","Form","DateTimePicker","Moment","momentLocalizer","Spinner","toast","ToastContainer","axios","url","locale","useStyles","root","width","container","maxHeight","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","CheckInList","props","classes","page","setPage","modal","setModal","toggle","rowsPerPage","setRowsPerPage","data","setData","apipatient","GetData","result","username","name","email","patientrow","setpatientValue","getUsermodal","dateVisitStart","timeVisitStart","visitTypeId","checkin","setcheckedin","showLoading","setShowLoading","apiUrl","saveCheckedin","e","preventDefault","patientId","console","log","post","then","history","push","success","catch","error","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","onChange","persist","slice","map","row","id","firstName","lastName","mobilePhoneNumber","dob","Date","value1","length"],"mappings":"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","sourcesContent":["\nimport React from 'react';  \n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';  \n\nimport Paper from '@material-ui/core/Paper';  \n\nimport Table from '@material-ui/core/Table';  \n\nimport TableBody from '@material-ui/core/TableBody';  \n\nimport TableCell from '@material-ui/core/TableCell';  \n\nimport TableContainer from '@material-ui/core/TableContainer';  \nimport TableHead from '@material-ui/core/TableHead';  \nimport TablePagination from '@material-ui/core/TablePagination';  \nimport TableRow from '@material-ui/core/TableRow';     \nimport { useState, useEffect } from 'react' ;\nimport {\n    MdDashboard, MdCancel\n} from 'react-icons/md';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n    FaUserCheck\n} from 'react-icons/fa';\nimport {Link} from 'react-router-dom'; \nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n    Row,\n    Form\n} from 'reactstrap'; \n//Date Picker\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport Spinner from 'react-bootstrap/Spinner';\n// React Notification\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport axios from 'axios'; \nimport {url} from 'axios/url';\n//Dtate Picker package\nMoment.locale('en');\nmomentLocalizer();\n\n\nconst useStyles = makeStyles({  \n  root: {  \n    width: '100%',  \n  },  \n  container: {  \n    maxHeight: 440,  \n  }, \n   \n\n});  \nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\n  \n\nexport default function CheckInList(props) {  \n  const classes = useStyles();  \n\n  const [page, setPage] = React.useState(0);  \n\n \n  //Modal state\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n    //end og modal state\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);  \n  //Get list of Visit/checkin patients API \n    const [data, setData] = useState([]); \n    const apipatient = url+\"patients\";\n    useEffect(() => {    \n            const GetData = async () => {    \n            const result = await axios(apipatient);    \n            setData(result.data);    \n            }  \n            GetData();     \n\n    }, []);   \n//get the user that need to be checked in \nconst [patientrow, setpatientValue] = useState({username:'', name:'', email:''});\n\nconst getUsermodal = (patientrow)=> {\n  // setuservalue(user);\n  setModal(!modal);\n\n}\n//Save Checkedin \n  const [checkin, setcheckedin] = useState({ dateVisitStart: '', timeVisitStart: '', visitTypeId:'' });  \n  const [showLoading, setShowLoading] = useState(false);  \n  const apiUrl =url+\"visits\";   \n  \n  const saveCheckedin = (e) => {  \n\n    e.preventDefault();  \n\n    const data = { \n                    dateVisitStart: '2020-11-03', \n                    timeVisitStart:'07:00 AM', \n                    visitTypeId:'2',\n                    patientId:'2'\n                };  \n    console.log(data);          \n    axios.post(apiUrl, data)\n        .then((result) => {          \n          setShowLoading(false);\n          props.history.push('/checkedin-patients')\n          toast.success(\"Patient Checked In was Successful!\");\n          console.log(result);\n        }).catch((error) => {\n            console.log(error);\n        setShowLoading(false)\n        setcheckedin(false);\n        // console.log(\"Error in CreateBook!\");\n        //toast.error(\"Something went wrong!\");\n        }\n        ); \n  }; \n\n  const handleChangePage = (event, newPage) => {  \n\n    setPage(newPage);  \n\n  };  \n\n  const handleChangeRowsPerPage = event => {  \n\n    setRowsPerPage(+event.target.value);  \n\n    setPage(0);  \n\n  };  \n  const onChange = (e) => {  \n    e.persist();  \n    setcheckedin({...checkin, [e.target.name]: e.target.value});  \n  }\n  return (  \n\n    <Paper className={classes.root}>  \n     <ToastContainer autoClose={2000} />\n      <TableContainer className={classes.container}>  \n\n        <Table stickyHeader aria-label=\"sticky table\">  \n\n        <TableHead>  \n\n            <TableRow>  \n\n              <StyledTableCell>Patient ID</StyledTableCell>  \n\n              <StyledTableCell align=\"right\">Patient Name</StyledTableCell>  \n\n              <StyledTableCell align=\"right\">Phone Number</StyledTableCell>  \n\n              <StyledTableCell align=\"right\">Age </StyledTableCell>  \n\n              <StyledTableCell align=\"right\">Action</StyledTableCell>  \n\n\n            </TableRow>  \n\n          </TableHead>  \n\n          <TableBody>  \n\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {  \n              return (  \n                                \n           <StyledTableRow >  \n\n                <TableCell component=\"th\" scope=\"row\">  \n\n                  {row.id}  \n\n                </TableCell>  \n              <TableCell align=\"right\">{row.firstName} {' '} {row.lastName}</TableCell>  \n\n                <TableCell align=\"right\">{row.mobilePhoneNumber}</TableCell>  \n\n                <TableCell align=\"right\">{row.dob}</TableCell>  \n\n                <TableCell align=\"right\">\n                    <Tooltip title=\"Patient Dashboard\">\n                        <Link to=\"/data-table1\">\n                            <IconButton aria-label=\"Patient Dashboard\">\n                                <MdDashboard size={20}/>\n                            </IconButton>\n                        </Link>\n                    </Tooltip>\n                    <Tooltip title=\"check in Patient\">\n                        <IconButton aria-label=\"check in Patient\" \n                            onClick={() => {\n                                getUsermodal(setpatientValue(row.firstName));\n\n                                }} >\n                            < FaUserCheck size={20} />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Closed Checked In Patient\">\n                        <IconButton aria-label=\"Closed Checked In Patient\">\n                            < MdCancel size={20} onClick={toggle}/>\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>  \n \n\n              </StyledTableRow>  \n                \n\n              );  \n\n            })}  \n\n          </TableBody>  \n        </Table>  \n            {/* The checkedin modal  */}\n            <Modal isOpen={modal} toggle={toggle} size=\"lg\">\n            <Form onSubmit={saveCheckedin}>\n        <ModalHeader toggle={toggle}>Check In Patient </ModalHeader>\n                <ModalBody>\n                    \n                    <Row form>\n                    <Col md={4}>\n                        <Input type=\"hidden\" name=\"patientId\" value={patientrow} ></Input>\n                        <FormGroup>\n                            <Label for=\"qualification\">Visit Type</Label>\n                            <Input type=\"select\" name=\"visitTypeId\" value={checkin.visitTypeId}  onChange={onChange}>\n                                <option value=\"2\">Booked</option>\n                                <option value=\"3\">Unbooked</option>\n\n                            </Input>\n                        </FormGroup>\n\n                    </Col>\n        \n                    <Col md={4}>\n                    <FormGroup>\n                        <Label for=\"middleName\">Date Of Visit</Label>\n                        \n                        <DateTimePicker time={false} name=\"dateVisitStart\"  id=\"dateVisitStart\" value={checkin.dateVisitStart} \n                        defaultValue={new Date()} max={new Date()}\n                        onChange={value1 => setcheckedin({...checkin, dateVisitStart: value1})}/>\n                    </FormGroup>\n                    </Col>\n                    <Col md={4}>\n                    <FormGroup>\n                        <Label for=\"middleName\">Time of Visit</Label>\n                        \n                        <DateTimePicker date={false} name=\"timeVisitStart\"  id=\"timeVisitStart\" \n                        value={checkin.timeVisitStart}  onChange={value1 => setcheckedin({...checkin, timeVisitStart: value1})} />\n                    </FormGroup>\n                    </Col>\n                </Row>\n               \n                </ModalBody>\n                <ModalFooter>\n                <Row>\n                    <Col md={12}>\n                    {showLoading && \n                        \n                        <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                        </Spinner> \n                    } \n                    </Col> \n                    </Row>\n                    <Button color=\"primary\"  type=\"submit\" >Check In</Button>{' '}\n                    <Button color=\"secondary\" onClick={() => toggle()}>Close</Button>\n                </ModalFooter>\n                </Form>\n            </Modal>\n      </TableContainer>  \n\n      <TablePagination  \n\n        rowsPerPageOptions={[5, 10, 15]}  \n\n        component=\"div\"  \n\n        count={data.length}  \n\n        rowsPerPage={rowsPerPage}  \n\n        page={page}  \n\n        onChangePage={handleChangePage}  \n\n        onChangeRowsPerPage={handleChangeRowsPerPage}  \n\n      />  \n\n    </Paper>  \n\n  );  \n\n} "]},"metadata":{},"sourceType":"module"}