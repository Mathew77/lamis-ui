{"ast":null,"code":"import _defineProperty from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/patient/PateintRegistationPage.jsx\";\nimport Page from 'components/Page';\nimport React, { useState } from 'react';\nimport MatButton from '@material-ui/core/Button';\nimport { Col, Form, FormGroup, Input, Label, Row, Alert } from 'reactstrap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { IoMdFingerPrint } from \"react-icons/io\";\nimport { FaFileImport } from \"react-icons/fa\";\nimport { FaPlusSquare } from 'react-icons/fa';\nimport Spinner from 'react-bootstrap/Spinner'; // import { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment'; // React Notification\n\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Title from 'components/Title/CardTitle';\nimport { url } from 'axios/url'; // import CountryStates from './CountryStates';\n\nMoment.locale('en');\nmomentLocalizer();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n      marginBottom: 20\n    },\n    Select: {\n      height: 45,\n      width: 300\n    },\n    button: {\n      margin: theme.spacing(1)\n    }\n  };\n});\n\nvar PatientRegistration = function PatientRegistration(props) {\n  var classes = useStyles();\n  var apiUrl = url + \"patients\";\n  var apicountries = url + \"countries\";\n  var apistate = url + \"state/country/\"; //Getting List of Countries and State\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      countries = _React$useState2[0],\n      setCountries = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      states = _React$useState4[0],\n      setStates = _React$useState4[1];\n\n  React.useEffect(function () {\n    function getCharacters() {\n      return _getCharacters.apply(this, arguments);\n    }\n\n    function _getCharacters() {\n      _getCharacters = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(apicountries);\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                body = _context.sent;\n                setCountries(body.map(function (_ref) {\n                  var name = _ref.name,\n                      id = _ref.id;\n                  return {\n                    label: name,\n                    value: id\n                  };\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getCharacters.apply(this, arguments);\n    }\n\n    getCharacters();\n  }, []);\n\n  var _useState = useState({\n    hospitalNumber: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    dateRegistration: '',\n    facilityId: '1',\n    dob: '',\n    dobEstimated: '',\n    educationId: '',\n    genderId: '',\n    maritalStatusId: '',\n    occupationId: '',\n    alternatePhoneNumber: '',\n    address1: '',\n    city: '',\n    countryId: '',\n    landmark: '',\n    provinceId: '',\n    zipCode: '',\n    stateId: '',\n    street: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      patient = _useState2[0],\n      setPatient = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showLoading = _useState4[0],\n      setShowLoading = _useState4[1]; //Saving of Patient Registration \n\n\n  var savePatient = function savePatient(e) {\n    //toast.warn(\"Processing Registration\");\n    setShowLoading(true);\n    e.preventDefault();\n    var data = {\n      hospitalNumber: patient.hospitalNumber,\n      dateRegistration: \"01:11:2020\",\n      facilityId: '1',\n      \"person\": {\n        firstName: patient.firstName,\n        lastName: patient.lastName,\n        email: patient.email,\n        dob: patient.dob,\n        maritalStatusId: patient.maritalStatusId,\n        occupationId: patient.occupationId,\n        genderId: patient.genderId,\n        educationId: patient.educationId,\n        \"personContact\": {\n          address1: patient.address1,\n          city: '1',\n          countryId: '1',\n          zipCode: patient.zipCode,\n          stateId: '1',\n          street: patient.street,\n          provinceId: 1\n        },\n        \"personRelatives\": [{\n          dobEstimated: patient.dobEstimated,\n          alternatePhoneNumber: patient.alternatePhoneNumber,\n          landmark: patient.landmark,\n          provinceId: patient.provinceId\n        }],\n        \"titleId\": 1\n      }\n    };\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/patient');\n      toast.success(\"Patient Registration Successful!\");\n    }).catch(function (error) {\n      setShowLoading(false); // console.log(\"Error in CreateBook!\");\n      //toast.error(\"Something went wrong!\");\n    });\n  }; //End of the Saving the Patient Registration\n\n\n  var onChange = function onChange(e) {\n    e.persist();\n    setPatient(_objectSpread({}, patient, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var callstateHooks = function callstateHooks(apistate, getCountryId) {\n    React.useEffect(function () {\n      function getCharacters() {\n        return _getCharacters2.apply(this, arguments);\n      }\n\n      function _getCharacters2() {\n        _getCharacters2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          var response, stateList;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return fetch(apistate + getCountryId);\n\n                case 2:\n                  response = _context2.sent;\n                  _context2.next = 5;\n                  return response.json();\n\n                case 5:\n                  stateList = _context2.sent;\n                  setStates(stateList.map(function (_ref2) {\n                    var name = _ref2.name,\n                        id = _ref2.id;\n                    return {\n                      label: name,\n                      value: id\n                    };\n                  }));\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n        return _getCharacters2.apply(this, arguments);\n      }\n\n      getCharacters();\n    }, []);\n  }; //Get States from selected country \n\n\n  var getStates = function getStates(event) {\n    var getCountryId = event.target.value; //setStates({})\n    //console.log(stateList);\n  };\n\n  return React.createElement(Page, {\n    title: \"Patient Regsitration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    autoClose: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(Alert, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"All Information with Asterisks(*) are compulsory\"), React.createElement(Form, {\n    onSubmit: savePatient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Basic Information \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \" float-right mr-1\",\n    startIcon: React.createElement(FaFileImport, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Import image\"), React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \" float-right mr-1\",\n    startIcon: React.createElement(IoMdFingerPrint, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Finger print\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Patient Id\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Patient ID \",\n    value: patient.hospitalNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Date Of Registration\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dateRegistration\",\n    id: \"dateRegistration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Fist Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    placeholder: \"First Name\",\n    value: patient.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Other Name(s)\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"otherNames\",\n    id: \"otherNames\",\n    placeholder: \"Middle Name\",\n    value: patient.otherNames,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Last Name \"), React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    placeholder: \"Last Name\",\n    value: patient.lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"genderId\",\n    id: \"genderId\",\n    value: patient.genderId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Male\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"occupation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Ocuupation\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"occupationId\",\n    id: \"occupationId\",\n    value: patient.occupationId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Students\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Business\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Government\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"qualification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Hightest Qualification\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"educationId\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"PHD\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"MSC\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"BSC\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"HND\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, \"NCE\"))))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"Marital Status\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"maritalStatusId\",\n    id: \"maritalStatusId\",\n    value: patient.maritalStatusId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, \"Signle\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Married\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Divorce\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"Date OF Birth\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dob\",\n    dropUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"Year\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"year\",\n    id: \"year\",\n    placeholder: \"Year\",\n    value: patient.Estimate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \"Months\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"months\",\n    id: \"months\",\n    placeholder: \"Months\",\n    value: patient.EstimateMonths,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, \"Days\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"days\",\n    id: \"days\",\n    placeholder: \"Days\",\n    value: patient.EstimateDays,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }))))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }), \"Estimates Date of  Birth\"))))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"Contact Details \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  })), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"mobilePhoneNumber\",\n    id: \"mobilePhoneNumber\",\n    placeholder: \"Phone Number\",\n    value: patient.mobilePhoneNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"altPhoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, \"Alt. Phone Number\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"alternatePhoneNumber\",\n    id: \"alternatePhoneNumber\",\n    placeholder: \"Alternative Number\",\n    value: patient.alternatePhoneNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"emailAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email Address\",\n    value: patient.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  })))))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \" Address \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  })), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"countryId\",\n    id: \"countryId\",\n    value: patient.countryId,\n    onChange: getStates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, countries.map(function (_ref3) {\n    var label = _ref3.label,\n        value = _ref3.value;\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, label);\n  })))), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"stressAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, \"State\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"street\",\n    id: \"street\",\n    placeholder: \"Stress Address\",\n    value: patient.street,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, states.map(function (_ref4) {\n    var label = _ref4.label,\n        value = _ref4.value;\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, label);\n  })))), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, \"Street Address\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    id: \"city\",\n    placeholder: \"City\",\n    value: patient.city,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lga\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"Province/District/LGA \"), React.createElement(Input, {\n    type: \"select\",\n    name: \"provinceId\",\n    id: \"provinceId\",\n    value: patient.provinceId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"Ogun\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }, \"Business\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, \"Government\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"landMark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, \"Land Mark\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"landmark\",\n    id: \"landmark\",\n    placeholder: \"Land Mark\",\n    value: patient.landmark,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  })))))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  }, \"Relatives\", React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \" float-right mr-1\",\n    startIcon: React.createElement(FaPlusSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, \"Add Relative\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  }), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, \"Fist Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"relativeFirstName\",\n    id: \"relativeFirstName\",\n    value: patient.relativeFirstName,\n    placeholder: \"First Name\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, \"Middle Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"relativeMiddleName\",\n    id: \"relativeMiddleName\",\n    placeholder: \"Middle Name\",\n    value: patient.relativeMiddleName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }, \"Last Name \"), React.createElement(Input, {\n    type: \"text\",\n    name: \"relativeLastName\",\n    id: \"relativeLastName\",\n    placeholder: \"Last Name\",\n    value: patient.relativeLastName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phoneRelative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489\n    },\n    __self: this\n  }, \"Phone No.\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneRelative\",\n    id: \"phoneRelative\",\n    placeholder: \"Relative Phone No.\",\n    value: patient.phoneRelative,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"relativeEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"relativeEmail\",\n    id: \"relativeEmail\",\n    placeholder: \"Relative Email Address\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"relativeAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }, \"Physical Address\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"relativeAddress\",\n    id: \"relativeAddress\",\n    placeholder: \"Relative Physical Address\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511\n    },\n    __self: this\n  }, \"Loading...\")))), React.createElement(MatButton, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516\n    },\n    __self: this\n  }, \"Save\"), React.createElement(MatButton, {\n    className: classes.button,\n    startIcon: React.createElement(CancelIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526\n    },\n    __self: this\n  }, \"Cancel\")))))));\n};\n\nexport default PatientRegistration;","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/patient/PateintRegistationPage.jsx"],"names":["Page","React","useState","MatButton","Col","Form","FormGroup","Input","Label","Row","Alert","makeStyles","Card","CardContent","SaveIcon","CancelIcon","IoMdFingerPrint","FaFileImport","FaPlusSquare","Spinner","axios","DateTimePicker","Moment","momentLocalizer","toast","ToastContainer","Title","url","locale","useStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","PatientRegistration","props","classes","apiUrl","apicountries","apistate","countries","setCountries","states","setStates","useEffect","getCharacters","fetch","response","json","body","map","name","id","label","value","hospitalNumber","firstName","lastName","email","dateRegistration","facilityId","dob","dobEstimated","educationId","genderId","maritalStatusId","occupationId","alternatePhoneNumber","address1","city","countryId","landmark","provinceId","zipCode","stateId","street","patient","setPatient","showLoading","setShowLoading","savePatient","e","preventDefault","data","post","then","result","history","push","success","catch","error","onChange","persist","target","callstateHooks","getCountryId","stateList","getStates","event","otherNames","Estimate","EstimateMonths","EstimateDays","mobilePhoneNumber","relativeFirstName","relativeMiddleName","relativeLastName","phoneRelative"],"mappings":"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","sourcesContent":["import Page from 'components/Page';\nimport React, { useState } from 'react';\nimport MatButton from '@material-ui/core/Button';\nimport {\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Alert,\n} from 'reactstrap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Card,CardContent, }\nfrom '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { IoMdFingerPrint } from \"react-icons/io\";\nimport { FaFileImport } from \"react-icons/fa\";\nimport {FaPlusSquare} from 'react-icons/fa';\nimport Spinner from 'react-bootstrap/Spinner';\n// import { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\n// React Notification\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Title from 'components/Title/CardTitle';\nimport {url} from 'axios/url';\n// import CountryStates from './CountryStates';\n\nMoment.locale('en');\nmomentLocalizer();\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center', \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    }, \n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n      marginBottom: 20\n    },\n    Select: {\n      height:45,\n      width: 300,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    \n    \n  }));\n\n\nconst PatientRegistration = (props) => {\n    const classes = useStyles();\n    const apiUrl = url+\"patients\";\n    const apicountries = url+\"countries\";\n    const apistate = url+\"state/country/\";\n    //Getting List of Countries and State\n    const [countries, setCountries] = React.useState([]);\n    const [states, setStates] = React.useState([]);\n    \n    React.useEffect(() => {\n        async function getCharacters() {\n          const response = await fetch(apicountries);\n          \n          const body = await response.json();\n          setCountries(body.map(({ name, id }) => ({ label: name, value: id })));\n        }\n        getCharacters();\n      }, []);\n    const [patient, setPatient] = useState({ \n        hospitalNumber:'',\n        firstName: '',\n        lastName: '', \n        email:'',\n        dateRegistration: '',\n        facilityId: '1',\n        dob:'',\n        dobEstimated:'',\n        educationId:'',\n        genderId:'',\n        maritalStatusId:'',\n        occupationId:'',\n        alternatePhoneNumber:'',\n        address1:'',\n        city:'',\n        countryId:'',\n        landmark:'',\n        provinceId:'',\n        zipCode:'',\n        stateId:'',\n        street:'',\n    });  \n    \n    const [showLoading, setShowLoading] = useState(false);\n  //Saving of Patient Registration \n    const savePatient = (e) => {\n      //toast.warn(\"Processing Registration\");\n      setShowLoading(true);\n      e.preventDefault();\n      const data = { \n            hospitalNumber: patient.hospitalNumber,           \n            dateRegistration: \"01:11:2020\",\n            facilityId: '1',\n           \n            \"person\": {\n                firstName: patient.firstName,\n                lastName:  patient.lastName, \n                email:patient.email,\n                dob:patient.dob,\n                maritalStatusId:patient.maritalStatusId,\n                occupationId:patient.occupationId,\n                genderId:patient.genderId,\n                educationId:patient.educationId,           \n            \"personContact\": {\n                address1:patient.address1,\n                city:'1',\n                countryId:'1',\n                zipCode:patient.zipCode,\n                stateId:'1',\n                street:patient.street,\n                provinceId: 1\n            },\n            \"personRelatives\": [\n            {\n                dobEstimated:patient.dobEstimated,\n                alternatePhoneNumber:patient.alternatePhoneNumber,               \n                landmark:patient.landmark,\n                provinceId:patient.provinceId,\n                \n            }\n        ],\n        \"titleId\":1\n        }\n    };\n\n      axios.post(apiUrl, data)\n        .then((result) => {          \n          setShowLoading(false);\n          props.history.push('/patient')\n          toast.success(\"Patient Registration Successful!\");\n        }).catch((error) => {\n        setShowLoading(false)\n        // console.log(\"Error in CreateBook!\");\n        //toast.error(\"Something went wrong!\");\n        }\n        );\n    };\n  //End of the Saving the Patient Registration\n    const onChange = (e) => {\n      e.persist();     \n      setPatient({...patient, [e.target.name]: e.target.value});\n    } \n    const callstateHooks =(apistate, getCountryId) =>{\n        React.useEffect(() => {\n            async function getCharacters() {\n              const response = await fetch(apistate+getCountryId);\n              \n              const stateList = await response.json();\n              setStates(stateList.map(({ name, id }) => ({ label: name, value: id })));\n            }\n            getCharacters();\n          }, []);\n    }\n    //Get States from selected country \n    const getStates = (event) => {\n        const getCountryId = event.target.value;\n        \n        \n        //setStates({})\n        //console.log(stateList);\n    }\n\n  return (\n    <Page title=\"Patient Regsitration\" >\n        <ToastContainer autoClose={2000} />\n        <Alert color=\"primary\">\n        All Information with Asterisks(*) are compulsory \n      </Alert>\n    <Form onSubmit={savePatient}>\n         {/* First  row form entry  for Demographics*/}\n        <Row>\n        <Col xl={12} lg={12} md={12}>\n        <Card className={classes.cardBottom}>  \n            <CardContent>\n                <Title >Basic Information <br/>\n                    \n                        <MatButton\n                            variant=\"contained\"\n                            color=\"primary\" className=\" float-right mr-1\"\n                            startIcon={<FaFileImport />}>\n                            Import image\n                        </MatButton>\n                        <MatButton\n                            variant=\"contained\"\n                            color=\"primary\" className=\" float-right mr-1\"  startIcon={<IoMdFingerPrint />}>\n                            Finger print\n                        </MatButton> \n                        <br/> \n                </Title>\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"hospitalNumber\">Patient Id</Label>\n                                <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Patient ID \" value={patient.hospitalNumber} />\n                            </FormGroup>\n                            </Col>\n                            \n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"middleName\">Date Of Registration</Label>\n                                \n                                <DateTimePicker time={false} name=\"dateRegistration\"  id=\"dateRegistration\"   />\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"firstName\">Fist Name</Label>\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" value={patient.firstName} />\n                            </FormGroup>\n                            </Col>\n                            \n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"middleName\">Other Name(s)</Label>\n                                <Input type=\"text\" name=\"otherNames\" id=\"otherNames\" placeholder=\"Middle Name\" value={patient.otherNames}/>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name </Label>\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={patient.lastName} />\n                            </FormGroup>\n                            </Col>\n                        </Row>\n                        \n                        <Row form>\n                            <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"maritalStatus\">Gender</Label>\n                                    <Input type=\"select\" name=\"genderId\" id=\"genderId\" value={patient.genderId}  >\n                                        <option value=\"1\">Female</option>\n                                        <option value=\"2\">Male</option>\n                                        \n                                    </Input>\n                                </FormGroup>  \n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"occupation\">Ocuupation</Label>\n                                <Input type=\"select\" name=\"occupationId\" id=\"occupationId\" value={patient.occupationId} >\n                                    <option value=\"1\">Students</option>\n                                    <option value=\"2\">Business</option>\n                                    <option value=\"3\">Government</option>\n                                </Input>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"qualification\">Hightest Qualification</Label>\n                                <Input type=\"select\" name=\"educationId\" onChange={onChange}>\n                                    <option value=\"1\">PHD</option>\n                                    <option value=\"2\">MSC</option>\n                                    <option value=\"3\">BSC</option>\n                                    <option value=\"4\">HND</option>\n                                    <option value=\"5\">NCE</option>\n                                </Input>\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n                        \n                        <Row form>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"maritalStatus\">Marital Status</Label>\n                                <Input type=\"select\" name=\"maritalStatusId\" id=\"maritalStatusId\" value={patient.maritalStatusId} >\n                                    <option value=\"1\">Signle</option>\n                                    <option value=\"2\">Married</option>\n                                    <option value=\"3\">Divorce</option>\n                                </Input>\n                            </FormGroup>  \n                            </Col>\n                            <Col md={4}>\n                            <FormGroup >\n                                <Label>Date OF Birth</Label>\n                                <DateTimePicker time={false} name=\"dob\"  dropUp  />\n\n                            </FormGroup>\n                            </Col>\n                            <Col md={4} >\n                                {/* Estimate Date of birth in a row  */}\n                                <Row form>\n                                        <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"phoneNumber\">Year</Label>\n                                            <Input type=\"text\" name=\"year\" id=\"year\" placeholder=\"Year\" value={patient.Estimate}  />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"phoneNumber\">Months</Label>\n                                            <Input type=\"text\" name=\"months\" id=\"months\" placeholder=\"Months\" value={patient.EstimateMonths}  />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"phoneNumber\">Days</Label>\n                                            <Input type=\"text\" name=\"days\" id=\"days\" placeholder=\"Days\" value={patient.EstimateDays}  />\n                                        </FormGroup>\n                                        </Col>\n                                </Row>\n                            </Col>           \n                            <Col md={4}>\n                            <FormGroup check>\n                                <Label></Label>\n                                <Input type=\"checkbox\" />Estimates Date of  Birth\n                               \n                            </FormGroup>\n                            </Col>\n                        </Row>\n                        \n                   \n                </CardContent>\n\n            </Card>\n            </Col>\n        </Row>\n        {/* Second row form entry  for contact details*/}\n        <Row>\n        <Col xl={12} lg={12} md={12}>\n            <Card className={classes.cardBottom}>  \n                                         \n                <CardContent>\n                <Title >Contact Details <br/></Title>\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"phoneNumber\">Phone Number</Label>\n                                <Input type=\"text\" name=\"mobilePhoneNumber\" id=\"mobilePhoneNumber\" placeholder=\"Phone Number\" value={patient.mobilePhoneNumber}  />\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"altPhoneNumber\">Alt. Phone Number</Label>\n                                <Input type=\"text\" name=\"alternatePhoneNumber\" id=\"alternatePhoneNumber\" placeholder=\"Alternative Number\" value={patient.alternatePhoneNumber}  />\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"emailAddress\">Email Address</Label>\n                                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email Address\" value={patient.email}  />\n                            </FormGroup>\n                            </Col>\n                        </Row>\n\n\n                </CardContent>\n            </Card>\n            </Col>\n        </Row>\n\n    {/* Third  row form entry  for Contact Address*/}\n    <Row>\n        <Col xl={12} lg={12} md={12}>\n        <Card className={classes.cardBottom}>  \n                                         \n            <CardContent>\n            <Title > Address <br/></Title>\n                \n                        <Row form>\n                                <Col md={3}>\n                                    <FormGroup>\n                                        <Label for=\"country\">Country</Label>\n                                            <Input type=\"select\" name=\"countryId\" id=\"countryId\" value={patient.countryId}  onChange={getStates}>\n                                                {countries.map(({ label, value }) => (\n                                                <option key={value} value={value}>\n                                                {label}\n                                                </option>\n                                                ))}\n                                            </Input>\n\n                                    </FormGroup>\n                                </Col>\n                                \n                                <Col md={3}>\n                                <FormGroup>\n                                    <Label for=\"stressAddress\">State</Label>\n                                    <Input type=\"select\" name=\"street\" id=\"street\" placeholder=\"Stress Address\" value={patient.street} onChange={onChange}>\n                                        {states.map(({ label, value }) => (\n                                            <option key={value} value={value}>\n                                            {label}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                </FormGroup>\n                            </Col>\n                            <Col md={3}>\n                            <FormGroup>\n                                <Label for=\"city\">Street Address</Label>\n                                <Input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" value={patient.city}  onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            \n                           \n                        </Row>\n                        \n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"lga\">Province/District/LGA </Label>\n                                <Input type=\"select\" name=\"provinceId\" id=\"provinceId\" value={patient.provinceId}  onChange={onChange}>\n                                    <option value=\"1\">Ogun</option>\n                                    <option value=\"2\">Business</option>\n                                    <option value=\"3\">Government</option>\n                                </Input>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"landMark\">Land Mark</Label>\n                                <Input type=\"text\" name=\"landmark\" id=\"landmark\" placeholder=\"Land Mark\" value={patient.landmark}  onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n                </CardContent>\n            </Card>\n            </Col>\n        </Row>\n         {/* fourth  row form entry  for Relatives*/}\n         <Row>\n            <Col xl={12} lg={12} md={12}>\n            <Card className={classes.cardBottom}>                                          \n                <CardContent>\n                    <Title > \n                        Relatives \n                        <MatButton\n                            variant=\"contained\"\n                            color=\"primary\" className=\" float-right mr-1\"  startIcon={<FaPlusSquare />}>\n                            Add Relative \n                        </MatButton> \n                   \n                    </Title>\n                    <br/>\n                            <Row form>\n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"firstName\">Fist Name</Label>\n                                    <Input type=\"text\" name=\"relativeFirstName\" id=\"relativeFirstName\" value={patient.relativeFirstName}  placeholder=\"First Name\" onChange={onChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"middleName\">Middle Name</Label>\n                                    <Input type=\"text\" name=\"relativeMiddleName\" id=\"relativeMiddleName\" placeholder=\"Middle Name\"  value={patient.relativeMiddleName} onChange={onChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"lastName\">Last Name </Label>\n                                    <Input type=\"text\" name=\"relativeLastName\" id=\"relativeLastName\" placeholder=\"Last Name\" value={patient.relativeLastName} onChange={onChange}/>\n                                </FormGroup>\n                                </Col>\n                            </Row>\n                            \n                            <Row form>\n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"phoneRelative\">Phone No.</Label>\n                                    <Input type=\"text\" name=\"phoneRelative\" id=\"phoneRelative\" placeholder=\"Relative Phone No.\" value={patient.phoneRelative} onChange={onChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"relativeEmail\">Email Address</Label>\n                                    <Input type=\"text\" name=\"relativeEmail\" id=\"relativeEmail\" placeholder=\"Relative Email Address\" onChange={onChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"relativeAddress\">Physical Address</Label>\n                                    <Input type=\"text\" name=\"relativeAddress\" id=\"relativeAddress\" placeholder=\"Relative Physical Address\" onChange={onChange}/>\n                                </FormGroup>  \n                                </Col>\n                            </Row>\n                            <Row>\n                            <Col md={12}>\n                            {showLoading && \n                                \n                                <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                                </Spinner> \n                            } \n                            </Col> \n                            </Row>\n                             <MatButton  \n                                type=\"submit\" \n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<SaveIcon />}\n                             >\n                                Save\n                            </MatButton>\n\n                            <MatButton\n                                    \n                                    className={classes.button}\n                                    startIcon={<CancelIcon />}\n                                >\n                                Cancel\n                            </MatButton>  \n\n                                \n                    </CardContent>\n                </Card>\n                </Col>\n            </Row>\n    </Form>\n</Page>\n  );\n};\n\nexport default PatientRegistration;\n"]},"metadata":{},"sourceType":"module"}