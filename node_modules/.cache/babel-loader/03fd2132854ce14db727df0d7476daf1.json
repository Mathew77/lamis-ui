{"ast":null,"code":"import _regeneratorRuntime from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/CheckIn/CheckedInPatientList.jsx\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { MdDashboard } from 'react-icons/md';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col } from 'reactstrap';\nimport Spinner from 'react-bootstrap/Spinner'; // React Notification\n\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport CheckInModal from 'components/CheckIn/CheckInModal';\nimport { url } from 'axios/url';\nvar useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 11\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function (theme) {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n})(TableRow);\nexport default function MatPaginationTable(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; //Modal state\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  }; //end og modal state\n\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1]; //Get list of Visit/checkin patients API \n\n\n  var apipatient = url + \"visits/\";\n  useEffect(function () {\n    var GetData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios(apipatient);\n\n              case 2:\n                result = _context.sent;\n                setData(result.data);\n                console.log(result.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function GetData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    GetData();\n  }, []);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }; //Save Checkedin \n\n\n  var _useState5 = useState({\n    dateVisitStart: '',\n    timeVisitStart: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checkin = _useState6[0],\n      setcheckedin = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showLoading = _useState8[0],\n      setShowLoading = _useState8[1];\n\n  var apiUrl = url + \"visits\";\n\n  var saveCheckedin = function saveCheckedin(e) {\n    e.preventDefault();\n    var data = {\n      dateVisitStart: checkin.dateVisitStart,\n      timeVisitStart: checkin.dateVisitStart\n    };\n    console.log(data);\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/checkedin-patients');\n      toast.success(\"Patient Checked In was Successful!\");\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      setShowLoading(false);\n      setcheckedin(false); // console.log(\"Error in CreateBook!\");\n      //toast.error(\"Something went wrong!\");\n    });\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    autoClose: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Patient ID\"), React.createElement(StyledTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Patient Name\"), React.createElement(StyledTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Start Visit\"), React.createElement(StyledTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"End Visit\"), React.createElement(StyledTableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Action\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return React.createElement(StyledTableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, row.hospitalNumber), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, row.firstName, \" \", ' ', \" \", row.lastName, \"}\"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, row.dateVisitStart, \" \", ' ', \" \", row.timeVisitStart, \" \"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, row.dateVisitEnd, \" \", ' ', \" \", row.timeVisitEnd, \" \"), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Patient Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/data-table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Collect Sample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(MdDashboard, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))))));\n  }))), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Check In Patient\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(CheckInModal, {\n    visitstart: checkin.dateVisitStart,\n    visittime: checkin.dateVisitStart,\n    saveCheckedin: saveCheckedin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Loading...\")))), React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Check In\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Close\")))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 15],\n    component: \"div\",\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/CheckIn/CheckedInPatientList.jsx"],"names":["React","makeStyles","withStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","useState","useEffect","MdDashboard","Tooltip","IconButton","Link","Button","Modal","ModalBody","ModalFooter","ModalHeader","Row","Col","Spinner","toast","ToastContainer","CheckInModal","url","useStyles","root","width","container","maxHeight","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","background","default","MatPaginationTable","props","classes","page","setPage","data","setData","modal","setModal","toggle","rowsPerPage","setRowsPerPage","apipatient","GetData","result","console","log","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","dateVisitStart","timeVisitStart","checkin","setcheckedin","showLoading","setShowLoading","apiUrl","saveCheckedin","e","preventDefault","post","then","history","push","success","catch","error","slice","map","row","hospitalNumber","firstName","lastName","dateVisitEnd","timeVisitEnd","length"],"mappings":"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","sourcesContent":["\nimport React from 'react';  \n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';  \n\nimport Paper from '@material-ui/core/Paper';  \n\nimport Table from '@material-ui/core/Table';  \n\nimport TableBody from '@material-ui/core/TableBody';  \n\nimport TableCell from '@material-ui/core/TableCell';  \nimport TableContainer from '@material-ui/core/TableContainer';  \nimport TableHead from '@material-ui/core/TableHead';  \nimport TablePagination from '@material-ui/core/TablePagination';  \nimport TableRow from '@material-ui/core/TableRow';  \nimport axios from 'axios';    \nimport { useState, useEffect } from 'react' ;\nimport {\n    MdDashboard\n} from 'react-icons/md';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Link} from 'react-router-dom'; \nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col} from 'reactstrap'; \nimport Spinner from 'react-bootstrap/Spinner';\n// React Notification\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport CheckInModal from 'components/CheckIn/CheckInModal';\nimport {url} from 'axios/url';\n\n\n\nconst useStyles = makeStyles({  \n  root: {  \n    width: '100%',  \n  },  \n  container: {  \n    maxHeight: 440,  \n  },  \n});  \nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n \n\nexport default function MatPaginationTable(props) {  \n  const classes = useStyles();  \n  const [page, setPage] = React.useState(0);  \n  const [data, setData] = useState([]);  \n  //Modal state\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n    //end og modal state\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);  \n  //Get list of Visit/checkin patients API \n  const apipatient = url+\"visits/\";\n  useEffect(() => {    \n        const GetData = async () => {    \n          const result = await axios(apipatient);    \n          setData(result.data);  \n          console.log(result.data);   \n        }  \n        GetData();     \n}, []);   \n\n  const handleChangePage = (event, newPage) => {  \n    setPage(newPage);  \n  };  \n  const handleChangeRowsPerPage = event => {  \n    setRowsPerPage(+event.target.value);  \n    setPage(0);  \n  };  \n\n  //Save Checkedin \n  const [checkin, setcheckedin] = useState({ dateVisitStart: '', timeVisitStart: '' });  \n  const [showLoading, setShowLoading] = useState(false);  \n  const apiUrl = url+\"visits\";  \n  \n  const saveCheckedin = (e) => {  \n    e.preventDefault();  \n\n    const data = { dateVisitStart: checkin.dateVisitStart, timeVisitStart:checkin.dateVisitStart };  \n    console.log(data);\n    axios.post(apiUrl, data)\n        .then((result) => {          \n          setShowLoading(false);\n          props.history.push('/checkedin-patients')\n          toast.success(\"Patient Checked In was Successful!\");\n          console.log(result);\n        }).catch((error) => {\n            console.log(error);\n        setShowLoading(false)\n        setcheckedin(false);\n        // console.log(\"Error in CreateBook!\");\n        //toast.error(\"Something went wrong!\");\n        }\n        ); \n  }; \n\n  return (  \n\n    <Paper className={classes.root}>  \n        <ToastContainer autoClose={2000} />\n      <TableContainer className={classes.container}>  \n\n        <Table stickyHeader aria-label=\"sticky table\">  \n\n        <TableHead>  \n\n            <TableRow>  \n\n              <StyledTableCell>Patient ID</StyledTableCell>  \n              <StyledTableCell align=\"center\">Patient Name</StyledTableCell>   \n              <StyledTableCell align=\"center\">Start Visit</StyledTableCell>\n              <StyledTableCell align=\"center\">End Visit</StyledTableCell>\n              <StyledTableCell align=\"center\">Action</StyledTableCell>\n\n\n            </TableRow>  \n\n          </TableHead>  \n\n          <TableBody>  \n\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {  \n              return (  \n\n           <StyledTableRow >  \n\n                <TableCell component=\"th\" scope=\"row\">  \n\n                  {row.hospitalNumber}  \n\n                </TableCell>  \n              <TableCell align=\"center\">{row.firstName} {' '} {row.lastName}}</TableCell>  \n\n              <TableCell align=\"center\">{row.dateVisitStart} {' '} {row.timeVisitStart} </TableCell>  \n\n                <TableCell align=\"center\">{row.dateVisitEnd} {' '} {row.timeVisitEnd} </TableCell>  \n\n                <TableCell align=\"center\">\n                <Tooltip title=\"Patient Dashboard\">\n                    <Link to=\"/data-table1\">\n                        <IconButton aria-label=\"Collect Sample\">\n                            <MdDashboard size={20}/>\n                        </IconButton>\n                    </Link>\n                </Tooltip>\n                </TableCell>  \n \n\n              </StyledTableRow>  \n\n                 \n\n              );  \n\n            })}  \n\n          </TableBody>  \n        </Table>  \n            {/* The checkedin modal  */}\n            <Modal isOpen={modal} toggle={toggle} size=\"lg\">\n                <ModalHeader toggle={toggle}>Check In Patient</ModalHeader>\n                <ModalBody>\n                    <CheckInModal  visitstart={checkin.dateVisitStart} visittime={checkin.dateVisitStart} saveCheckedin={saveCheckedin}/>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Row>\n                    <Col md={12}>\n                    {showLoading && \n                        \n                        <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                        </Spinner> \n                    } \n                    </Col> \n                    </Row>\n                    <Button color=\"primary\" onClick={toggle}>Check In</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n            </Modal>\n      </TableContainer>  \n\n      <TablePagination  \n\n        rowsPerPageOptions={[5, 10, 15]}  \n\n        component=\"div\"  \n\n        count={data.length}  \n\n        rowsPerPage={rowsPerPage}  \n\n        page={page}  \n\n        onChangePage={handleChangePage}  \n\n        onChangeRowsPerPage={handleChangeRowsPerPage}  \n\n      />  \n\n    </Paper>  \n\n  );  \n\n} "]},"metadata":{},"sourceType":"module"}