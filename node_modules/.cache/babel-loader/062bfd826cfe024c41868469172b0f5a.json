{"ast":null,"code":"import _defineProperty from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Vitals/AddVitalsPage.jsx\";\nimport React, { useState } from 'react';\nimport MatButton from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Row, Col } from 'reactstrap';\nimport Title from 'components/Title/CardTitle';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Spinner from 'react-bootstrap/Spinner'; // React Notification\n\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\"; //Date Picker\n\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { url } from 'axios/url'; //Dtate Picker package\n\nMoment.locale('en');\nmomentLocalizer();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n      marginBottom: 20\n    },\n    Select: {\n      height: 45,\n      width: 350\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    root: {\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    },\n    input: {\n      display: 'none'\n    }\n  };\n});\nexport default function AddVitalsPage(props) {\n  var classes = useStyles(); //Save Vitals \n\n  var _useState = useState({\n    formName: 'VITALS_SIGN_FORM',\n    patientId: props.patient.patientId,\n    serviceName: 'CLINICAL_SERVICE',\n    visitId: props.patient.checkInId,\n    dateRegistration: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      vitals = _useState2[0],\n      setVitals = _useState2[1];\n\n  var _useState3 = useState({\n    pulse: \"\",\n    respiratoryRate: \"\",\n    temperature: \"\",\n    diastolic: \"\",\n    systolic: \"\",\n    bodyWeight: \"\",\n    height: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formDataForVitals = _useState4[0],\n      setformDataForVitals = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showLoading = _useState6[0],\n      setShowLoading = _useState6[1];\n\n  var apiUrl = url + \"visits\";\n\n  var SaveVitals = function SaveVitals(e) {\n    console.log('the save button is call');\n    e.preventDefault();\n    var newDatenow = moment(vitals.dateRegistration).format('DD-MM-YYYY');\n    var data = {\n      formName: 'VITALS_SIGN_FORM',\n      patientId: vitals.patientId,\n      serviceName: 'CLINICAL_SERVICE',\n      visitId: vitals.visitId,\n      formData: formDataForVitals,\n      dateRegistration: newDatenow\n    };\n    console.log(data);\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/checkedin-patients');\n      toast.success(\"Patient Checked In was Successful!\");\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      setShowLoading(false);\n      setVitals(false); // console.log(\"Error in CreateBook!\");\n      //toast.error(\"Something went wrong!\");\n    });\n  };\n\n  var onChangeFormdata = function onChangeFormdata(e) {\n    e.persist();\n    setformDataForVitals(_objectSpread({}, formDataForVitals, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: SaveVitals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    autoClose: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"New Vitals Signs --- \", props.patient.hospitalNumber), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Patient Id\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Patient ID \",\n    value: patient.hospitalNumber,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Date Of Registration\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dateRegistration\",\n    id: \"dateRegistration\",\n    value: patient.dateRegistration,\n    onChange: function onChange(value1) {\n      return setPatient(_objectSpread({}, patient, {\n        dateRegistration: value1\n      }));\n    },\n    defaultValue: new Date(),\n    max: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"pulse1\",\n    name: \"pulse1\",\n    variant: \"outlined\",\n    fullWidth: true,\n    id: \"pulse1\",\n    label: \"Pulse(bpm)\",\n    size: \"small\",\n    value: formDataForVitals.pulse,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"respiration\",\n    variant: \"outlined\",\n    fullWidth: true,\n    id: \"respiration(bpm)\",\n    label: \"Respiratory Rate\",\n    size: \"small\",\n    value: formDataForVitals.respiratoryRate,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Temperature(c)\",\n    size: \"small\",\n    value: formDataForVitals.temperature,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    id: \"diatolic\",\n    label: \"Blood Pressure(mmHg)\",\n    size: \"small\",\n    helperText: \"Diatolic\",\n    value: formDataForVitals.diastolic,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Blood Pressure(mmHg)\",\n    size: \"small\",\n    helperText: \"Sytolic\",\n    value: formDataForVitals.systolic,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Wight(kg)\",\n    size: \"small\",\n    value: formDataForVitals.bodyWeight,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"height\",\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Height(cm)\",\n    size: \"small\",\n    value: formDataForVitals.height,\n    onChange: onChangeFormdata,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Loading...\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), React.createElement(MatButton, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Save\"), React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    startIcon: React.createElement(CancelIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Vitals/AddVitalsPage.jsx"],"names":["React","useState","MatButton","TextField","Grid","makeStyles","Card","CardContent","Row","Col","Title","SaveIcon","CancelIcon","Spinner","toast","ToastContainer","DateTimePicker","Moment","momentLocalizer","moment","axios","url","locale","useStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","AddVitalsPage","props","classes","formName","patientId","patient","serviceName","visitId","checkInId","dateRegistration","Date","vitals","setVitals","pulse","respiratoryRate","temperature","diastolic","systolic","bodyWeight","formDataForVitals","setformDataForVitals","showLoading","setShowLoading","apiUrl","SaveVitals","e","console","log","preventDefault","newDatenow","format","data","formData","post","then","result","history","push","success","catch","error","onChangeFormdata","persist","target","name","value","hospitalNumber","onChange","value1","setPatient"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport MatButton from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Card,\n    CardContent,\n}\n    from '@material-ui/core';\nimport { Row, Col } from 'reactstrap';\nimport Title from 'components/Title/CardTitle';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Spinner from 'react-bootstrap/Spinner';\n// React Notification\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\n//Date Picker\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport moment from 'moment';\n\nimport axios from 'axios';  \nimport {url} from 'axios/url';\n\n//Dtate Picker package\nMoment.locale('en');\nmomentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height:45,\n        width: 350,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n \nexport default function AddVitalsPage(props) {\n    const classes = useStyles();\n\n    //Save Vitals \n        const [vitals, setVitals] = useState({ \n                formName: 'VITALS_SIGN_FORM', \n                patientId: props.patient.patientId, \n                serviceName:'CLINICAL_SERVICE', \n                visitId:props.patient.checkInId, \n                dateRegistration:new Date() \n            }); \n        const [formDataForVitals, setformDataForVitals] = useState({pulse:\"\", respiratoryRate:\"\", temperature:\"\", diastolic:\"\", systolic:\"\", bodyWeight:\"\", height:\"\"}) \n        const [showLoading, setShowLoading] = useState(false);  \n        const apiUrl = url+\"visits\";   \n\n        const SaveVitals = (e) => { \n            console.log('the save button is call'); \n        e.preventDefault();  \n        const newDatenow = moment(vitals.dateRegistration).format('DD-MM-YYYY');\n        const data = { \n                formName: 'VITALS_SIGN_FORM', \n                patientId:vitals.patientId, \n                serviceName:'CLINICAL_SERVICE' ,\n                visitId:vitals.visitId,\n                formData:formDataForVitals,\n                dateRegistration:newDatenow\n        };  \n        console.log(data);\n        axios.post(apiUrl, data)\n            .then((result) => {          \n                setShowLoading(false);\n                props.history.push('/checkedin-patients')\n                toast.success(\"Patient Checked In was Successful!\");\n                console.log(result);\n            }).catch((error) => {\n                console.log(error);\n            setShowLoading(false)\n            setVitals(false);\n            // console.log(\"Error in CreateBook!\");\n            //toast.error(\"Something went wrong!\");\n            }\n            ); \n        };\n\n    const onChangeFormdata = (e) => {\n        e.persist();     \n        setformDataForVitals({...formDataForVitals, [e.target.name]: e.target.value});\n        } \n\n\n    return (\n        \n            <form className={classes.form} onSubmit={SaveVitals}>\n                <ToastContainer autoClose={2000} />\n                <Card className={classes.cardBottom}>\n                    <CardContent>\n                        <Title >New Vitals Signs --- {props.patient.hospitalNumber}\n                        </Title>\n                        <br/>\n\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"hospitalNumber\">Patient Id</Label>\n                                <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Patient ID \" value={patient.hospitalNumber} onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            \n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"middleName\">Date Of Registration</Label>\n                                \n                                <DateTimePicker time={false} name=\"dateRegistration\"  id=\"dateRegistration\"   value={patient.dateRegistration}   onChange={value1 => setPatient({...patient, dateRegistration: value1})}\n                                defaultValue={new Date()} max={new Date()}\n                                />\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n\n\n\n\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                            \n                            \n\n                            </Grid>\n                           \n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"pulse1\"\n                                    name=\"pulse1\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"pulse1\"\n                                    label=\"Pulse(bpm)\"\n                                    size=\"small\"\n                                    value={formDataForVitals.pulse}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                   \n                                    name=\"respiration\"\n                                    variant=\"outlined\"\n                                    \n                                    fullWidth\n                                    id=\"respiration(bpm)\"\n                                    label=\"Respiratory Rate\"\n                                    size=\"small\"\n                                    value={formDataForVitals.respiratoryRate}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    \n                                    fullWidth\n                                    \n                                    label=\"Temperature(c)\"\n                                    size=\"small\"\n                                    value={formDataForVitals.temperature}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>  \n                                <TextField\n                                    \n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"diatolic\"\n                                    label=\"Blood Pressure(mmHg)\"\n                                    size=\"small\"\n                                    helperText=\"Diatolic\"\n                                    value={formDataForVitals.diastolic}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                \n                                    \n                                    variant=\"outlined\"\n                                    \n                                    fullWidth\n                                    \n                                    label=\"Blood Pressure(mmHg)\"\n                                    size=\"small\"\n                                    helperText=\"Sytolic\"\n                                    value={formDataForVitals.systolic}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}> \n                                <TextField\n                                 \n                                    variant=\"outlined\"\n                                  \n                                    fullWidth\n    \n                                    label=\"Wight(kg)\"\n                                    size=\"small\"\n                                    value={formDataForVitals.bodyWeight}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                 \n                                    name=\"height\"\n                                    variant=\"outlined\"\n                                    \n                                    fullWidth\n                                   \n                                    label=\"Height(cm)\"\n                                    size=\"small\"\n                                    value={formDataForVitals.height}\n                                    onChange={onChangeFormdata}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Row>\n                            <Col md={12}>\n                            {showLoading && \n                                \n                                <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                                </Spinner> \n                            } \n                            </Col> \n                        </Row>\n                        <br/>\n                        <MatButton  \n                                type=\"submit\" \n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<SaveIcon />}\n                             >\n                                Save\n                        </MatButton>\n                        <MatButton\n                            variant=\"contained\"\n                            color=\"default\"\n                            className={classes.button}\n                            startIcon={<CancelIcon />}\n                        >\n                            Cancel\n                        </MatButton>\n                    </CardContent>\n                </Card>\n            </form>\n    );\n}"]},"metadata":{},"sourceType":"module"}