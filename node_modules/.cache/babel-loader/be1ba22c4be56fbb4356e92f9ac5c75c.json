{"ast":null,"code":"import _defineProperty from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Hiv/TestOrder/TestOrder.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { FormGroup, Input } from 'reactstrap';\nimport MatButton from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Line } from 'react-chartjs-2'; // React Notification\n\nimport { toast } from \"react-toastify\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport { url } from 'axios/url';\nimport Paper from '@material-ui/core/Paper';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Chip from '@material-ui/core/Chip';\nimport TagFacesIcon from '@material-ui/icons/TagFaces'; // {/* Auto textfield complete */}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin: theme.spacing(7),\n      bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n      },\n      title: {\n        fontSize: 12\n      },\n      pos: {\n        fontSize: 11\n      },\n      cardContent: {\n        padding: 2\n      },\n      cardroot: {\n        margin: theme.spacing(1),\n        height: 250 + 'px !important'\n      }\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    formroot: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15)\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20\n    },\n    details: {\n      alignItems: 'center'\n    },\n    column: {\n      flexBasis: '33.33%'\n    },\n    helper: {\n      borderLeft: \"2px solid \".concat(theme.palette.divider),\n      padding: theme.spacing(1, 2)\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    inforoot: {\n      width: '95%',\n      margin: 20,\n      backgroundColor: '#eee'\n    }\n  };\n});\nexport default function ConsultationPage(props) {\n  var classes = useStyles();\n  var getpatient = props.getpatientdetails.getpatient;\n  var PatientID = getpatient.row.patientId;\n  var visitId = getpatient.row.id; //console.log(getpatient);\n  //Save Assign Clinician \n\n  var _useState = useState({\n    present_consultation: '',\n    patientId: PatientID,\n    visitId: visitId,\n    consultation_notes: '',\n    formName: 'CONSULTATION_FORM',\n    serviceName: 'GENERAL_SERVICE'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      consult = _useState2[0],\n      setconsult = _useState2[1]; //    console.log(clinician);\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showLoading = _useState4[0],\n      setShowLoading = _useState4[1];\n\n  var apiUrl = url + \"encounters/GENERAL_SERVICE/CONSULTATION_FORM/\" + PatientID;\n\n  var Saveconsult = function Saveconsult(e) {\n    e.preventDefault();\n    var data = {\n      formData: {\n        \"allergies\": [\"Penicillin\", \"sulfonamides\", \"atracurium\", \"Chemotherapy drugs\"]\n      },\n      present_consultation: consult.present_consultation,\n      patientId: PatientID,\n      visitId: visitId,\n      consultation_notes: consult.consultation_notes,\n      formName: 'CONSULTATION_FORM',\n      serviceName: 'GENERAL_SERVICE'\n    };\n    console.log(data);\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/checkedin-patients');\n      toast.success(\" Successful!\");\n    }).catch(function (error) {\n      console.log(error);\n      setShowLoading(false);\n      setconsult(false);\n    });\n  };\n\n  var onChange = function onChange(e) {\n    e.persist();\n    setconsult(_objectSpread({}, consult, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Selected Test Order\"), React.createElement(Paper, {\n    className: classes.chiproot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, chipData.map(function (data) {\n    var icon;\n\n    if (data.label === 'React') {\n      icon = React.createElement(TagFacesIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Chip, {\n      key: data.key,\n      icon: icon,\n      label: data.label,\n      onDelete: data.label === 'React' ? undefined : handleDelete(data),\n      className: classes.chip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    });\n  }))))), React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Test Order\"), React.createElement(Grid, {\n    container: true,\n    spacing: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"highlights-demo\",\n    style: {\n      width: 300\n    },\n    options: top100Films,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.title;\n    },\n    renderInput: function renderInput(params) {\n      return React.createElement(TextField, Object.assign({}, params, {\n        label: \"Lab Test Group\",\n        variant: \"outlined\",\n        fullWidth: true,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    },\n    renderOption: function renderOption(option, _ref) {\n      var inputValue = _ref.inputValue;\n      var matches = match(option.title, inputValue);\n      var parts = parse(option.title, matches);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, parts.map(function (part, index) {\n        return React.createElement(\"span\", {\n          key: index,\n          style: {\n            fontWeight: part.highlight ? 700 : 400\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, part.text);\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.checkboxroot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Assign responsibility\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: gilad,\n      onChange: handleChangecheckbox('gilad'),\n      value: \"gilad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }),\n    label: \"Gilad Gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: jason,\n      onChange: handleChangecheckbox('jason'),\n      value: \"jason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }),\n    label: \"Jason Killian\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: antoine,\n      onChange: handleChangecheckbox('antoine'),\n      value: \"antoine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }),\n    label: \"Antoine Llorca\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Be careful\")), React.createElement(FormControl, {\n    required: true,\n    error: error,\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Pick two\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: gilad,\n      onChange: handleChangecheckbox('gilad'),\n      value: \"gilad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }),\n    label: \"Gilad Gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: jason,\n      onChange: handleChangecheckbox('jason'),\n      value: \"jason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }),\n    label: \"Jason Killian\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: antoine,\n      onChange: handleChangecheckbox('antoine'),\n      value: \"antoine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }),\n    label: \"Antoine Llorca\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"You can display an error\"))))))))));\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Hiv/TestOrder/TestOrder.jsx"],"names":["React","useState","makeStyles","Typography","Grid","Card","CardContent","FormGroup","Input","MatButton","SaveIcon","FormLabel","FormControl","FormControlLabel","FormHelperText","Checkbox","Line","toast","Spinner","axios","url","Paper","Autocomplete","parse","match","Chip","TagFacesIcon","useStyles","theme","root2","flexGrow","width","backgroundColor","palette","background","paper","margin","spacing","bullet","display","transform","title","fontSize","pos","cardContent","padding","cardroot","height","root","formroot","heading","typography","pxToRem","secondaryHeading","color","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","link","primary","main","textDecoration","inforoot","ConsultationPage","props","classes","getpatient","getpatientdetails","PatientID","row","patientId","visitId","id","present_consultation","consultation_notes","formName","serviceName","consult","setconsult","showLoading","setShowLoading","apiUrl","Saveconsult","e","preventDefault","data","formData","console","log","post","then","result","history","push","success","catch","error","onChange","persist","target","name","value","chiproot","chipData","map","label","key","undefined","handleDelete","chip","top100Films","option","params","inputValue","matches","parts","part","index","fontWeight","highlight","checkboxroot","formControl","gilad","handleChangecheckbox","jason","antoine"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {\n    FormGroup,\n    Input,\n    } from 'reactstrap';\nimport MatButton from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Line } from 'react-chartjs-2';\n// React Notification\nimport { toast } from \"react-toastify\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';  \nimport {url} from 'axios/url';\nimport Paper from '@material-ui/core/Paper';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Chip from '@material-ui/core/Chip';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\n// {/* Auto textfield complete */}\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin:theme.spacing(7),\n      bullet: {\n          display: 'inline-block',\n          margin: '0 2px',\n          transform: 'scale(0.8)',\n        },\n        title: {\n          fontSize: 12,\n            \n        },\n        pos: {\n          fontSize: 11,\n        },\n      cardContent:{\n          padding: 2,\n      },\n      cardroot:{\n          margin:theme.spacing(1),\n          height: 250 + 'px !important' ,\n      }\n      \n      },\n      \n      root: {\n          '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200,\n          },\n          \n      },\n  \n      formroot: {\n          '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200,\n          },\n      },\n  \n      heading: {\n          fontSize: theme.typography.pxToRem(15),\n      },\n      secondaryHeading: {\n          fontSize: theme.typography.pxToRem(15),\n          color: theme.palette.text.secondary,\n      },\n      icon: {\n          verticalAlign: 'bottom',\n          height: 20,\n          width: 20,\n      },\n      details: {\n          alignItems: 'center',\n      },\n      column: {\n          flexBasis: '33.33%',\n      },\n      helper: {\n          borderLeft: `2px solid ${theme.palette.divider}`,\n          padding: theme.spacing(1, 2),\n      },\n      link: {\n          color: theme.palette.primary.main,\n          textDecoration: 'none',\n          '&:hover': {\n          textDecoration: 'underline',\n          },\n      },\n      inforoot: {\n          width: '95%',\n          margin: 20,\n          backgroundColor: '#eee',\n      },\n      }));\n   \n  \n\nexport default function ConsultationPage(props) {\n    const classes = useStyles();\n    \n    const {getpatient} =props.getpatientdetails ;\n   \n   const PatientID = getpatient.row.patientId;\n   const visitId = getpatient.row.id;\n   //console.log(getpatient);\n    //Save Assign Clinician \n    const [consult, setconsult] = useState({ \n            present_consultation: '', \n            patientId: PatientID, \n            visitId:visitId,\n            consultation_notes:'',\n            formName: 'CONSULTATION_FORM',\n            serviceName: 'GENERAL_SERVICE' \n        }); \n    //    console.log(clinician);\n    const [showLoading, setShowLoading] = useState(false);  \n    const apiUrl = url+\"encounters/GENERAL_SERVICE/CONSULTATION_FORM/\"+PatientID;  \n    const Saveconsult = (e) => { \n    e.preventDefault();  \n\n    const data = {\n            formData :{\"allergies\":[\"Penicillin\",\"sulfonamides\",\"atracurium\",\"Chemotherapy drugs\"]},\n            present_consultation: consult.present_consultation, \n            patientId: PatientID, \n            visitId:visitId,\n            consultation_notes: consult.consultation_notes,\n            formName: 'CONSULTATION_FORM',\n            serviceName: 'GENERAL_SERVICE'\n    }; \n    console.log(data);\n    axios.post(apiUrl, data)\n        .then((result) => {          \n            setShowLoading(false);\n            props.history.push('/checkedin-patients')\n            toast.success(\" Successful!\");\n        }).catch((error) => {\n            console.log(error);\n        setShowLoading(false)\n        setconsult(false);\n\n        }\n        ); \n    };\n\nconst onChange = (e) => {\n    e.persist();     \n    setconsult({...consult, [e.target.name]: e.target.value});\n    } \n\nreturn (\n\n    <Grid container spacing={2}>\n                <Grid item xs='12'> \n                    <Card className={classes.cardroot}>\n                            <CardContent>\n                                <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                    Selected Test Order\n                                </Typography>\n                                 \n                                <Paper className={classes.chiproot}>\n                                    {chipData.map(data => {\n                                        let icon;\n\n                                        if (data.label === 'React') {\n                                        icon = <TagFacesIcon />;\n                                        }\n\n                                        return (\n                                           <Chip\n                                            key={data.key}\n                                            icon={icon}\n                                            label={data.label}\n                                            onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n                                            className={classes.chip}\n                                        />\n                                        );\n                                    })}\n                                </Paper>                                                                  \n                        </CardContent>                      \n                    </Card>\n                </Grid>\n            \n                <Grid item xs='12'>\n                    <Card className={classes.cardroot}>\n                            <CardContent>\n                                <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                Test Order\n                                </Typography>\n                                    <Grid container spacing={12}>\n                                        <Grid item xs='12'>\n                                            <Typography className={classes.pos} color=\"textSecondary\" >\n                                            <Autocomplete\n                                                id=\"highlights-demo\"\n                                                style={{ width: 300 }}\n                                                options={top100Films}\n                                                getOptionLabel={option => option.title}\n                                                renderInput={params => (\n                                                    <TextField {...params} label=\"Lab Test Group\" variant=\"outlined\" fullWidth margin=\"normal\" />\n                                                )}\n                                                renderOption={(option, { inputValue }) => {\n                                                    const matches = match(option.title, inputValue);\n                                                    const parts = parse(option.title, matches);\n\n                                                    return (\n                                                    <div>\n                                                        {parts.map((part, index) => (\n                                                        <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                                                            {part.text}\n                                                        </span>\n                                                        ))}\n                                                    </div>\n                                                    );\n                                                }}\n                                                />   \n\n                                                <br/>\n                                                <div className={classes.checkboxroot}>\n                                                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                                                        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n                                                        <FormGroup>\n                                                        <FormControlLabel\n                                                            control={<Checkbox checked={gilad} onChange={handleChangecheckbox('gilad')} value=\"gilad\" />}\n                                                            label=\"Gilad Gray\"\n                                                        />\n                                                        <FormControlLabel\n                                                            control={<Checkbox checked={jason} onChange={handleChangecheckbox('jason')} value=\"jason\" />}\n                                                            label=\"Jason Killian\"\n                                                        />\n                                                        <FormControlLabel\n                                                            control={\n                                                            <Checkbox checked={antoine} onChange={handleChangecheckbox('antoine')} value=\"antoine\" />\n                                                            }\n                                                            label=\"Antoine Llorca\"\n                                                        />\n                                                        </FormGroup>\n                                                        <FormHelperText>Be careful</FormHelperText>\n                                                    </FormControl>\n                                                    <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n                                                        <FormLabel component=\"legend\">Pick two</FormLabel>\n                                                        <FormGroup>\n                                                        <FormControlLabel\n                                                            control={<Checkbox checked={gilad} onChange={handleChangecheckbox('gilad')} value=\"gilad\" />}\n                                                            label=\"Gilad Gray\"\n                                                        />\n                                                        <FormControlLabel\n                                                            control={<Checkbox checked={jason} onChange={handleChangecheckbox('jason')} value=\"jason\" />}\n                                                            label=\"Jason Killian\"\n                                                        />\n                                                        <FormControlLabel\n                                                            control={\n                                                            <Checkbox checked={antoine} onChange={handleChangecheckbox('antoine')} value=\"antoine\" />\n                                                            }\n                                                            label=\"Antoine Llorca\"\n                                                        />\n                                                        </FormGroup>\n                                                        <FormHelperText>You can display an error</FormHelperText>\n                                                    </FormControl>\n                                                    </div>\n                                                \n                                            </Typography>\n                                        </Grid>\n                                        \n                                    </Grid>                               \n                            </CardContent>                      \n                        </Card>\n\n                </Grid>\n                \n            </Grid>\n        \n)\n}"]},"metadata":{},"sourceType":"module"}