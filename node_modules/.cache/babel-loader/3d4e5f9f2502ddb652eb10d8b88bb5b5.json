{"ast":null,"code":"import _toConsumableArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Hiv/TestOrder/TestOrder.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent'; // import {\n//     FormGroup,\n//     } from 'reactstrap';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nvar filter = createFilterOptions();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: 'auto'\n    },\n    paper: {\n      width: 200,\n      height: 230,\n      overflow: 'auto'\n    },\n    button: {\n      margin: theme.spacing(0.5, 0)\n    },\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin: theme.spacing(7),\n      bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n      },\n      title: {\n        fontSize: 12\n      },\n      pos: {\n        fontSize: 11\n      },\n      cardContent: {\n        padding: 2\n      },\n      cardroot: {\n        margin: theme.spacing(1),\n        height: 250 + 'px !important'\n      }\n    }\n  };\n});\n\nfunction not(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) === -1;\n  });\n}\n\nfunction intersection(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  });\n}\n\nexport default function ConsultationPage(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checked = _React$useState4[0],\n      setChecked = _React$useState4[1];\n\n  var _React$useState5 = React.useState([0, 1, 2, 3]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      left = _React$useState6[0],\n      setLeft = _React$useState6[1];\n\n  var _React$useState7 = React.useState([4, 5, 6, 7]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      right = _React$useState8[0],\n      setRight = _React$useState8[1];\n\n  var leftChecked = intersection(checked, left);\n  var rightChecked = intersection(checked, right);\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  var handleAllRight = function handleAllRight() {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  var handleCheckedRight = function handleCheckedRight() {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  var handleCheckedLeft = function handleCheckedLeft() {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  var handleAllLeft = function handleAllLeft() {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  var customList = function customList(items) {\n    return React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, items.map(function (value) {\n      var labelId = \"transfer-list-item-\".concat(value, \"-label\");\n      return React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: checked.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        id: labelId,\n        primary: \"List item \".concat(value + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }));\n    }), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(\"form\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardroot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Presenting Complaints\"), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, customList(left)), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllRight,\n    disabled: left.length === 0,\n    \"aria-label\": \"move all right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"\\u226B\"), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedRight,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \">\"), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedLeft,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"<\"), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllLeft,\n    disabled: right.length === 0,\n    \"aria-label\": \"move all left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\u226A\"))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, customList(right)))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })));\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nvar top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Hiv/TestOrder/TestOrder.jsx"],"names":["React","makeStyles","Typography","Grid","Card","CardContent","List","ListItem","ListItemIcon","ListItemText","Checkbox","Button","Paper","TextField","Autocomplete","createFilterOptions","filter","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","root2","flexGrow","backgroundColor","palette","background","bullet","display","transform","title","fontSize","pos","cardContent","padding","cardroot","not","a","b","value","indexOf","intersection","ConsultationPage","props","classes","useState","setValue","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","customList","items","map","labelId","form","length","top100Films","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n// import {\n//     FormGroup,\n//     } from 'reactstrap';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nconst filter = createFilterOptions();\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 'auto',\n      },\n      paper: {\n        width: 200,\n        height: 230,\n        overflow: 'auto',\n      },\n      button: {\n        margin: theme.spacing(0.5, 0),\n      },\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin:theme.spacing(7),\n      bullet: {\n          display: 'inline-block',\n          margin: '0 2px',\n          transform: 'scale(0.8)',\n        },\n        title: {\n          fontSize: 12,\n            \n        },\n        pos: {\n          fontSize: 11,\n        },\n      cardContent:{\n          padding: 2,\n      },\n      cardroot:{\n          margin:theme.spacing(1),\n          height: 250 + 'px !important' ,\n      }\n      \n      },\n      \n      }));\n   \n  \nfunction not(a, b) {\n    return a.filter(value => b.indexOf(value) === -1);\n  }\n  \n  function intersection(a, b) {\n    return a.filter(value => b.indexOf(value) !== -1);\n  }\n\nexport default function ConsultationPage(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(null);\n    const [checked, setChecked] = React.useState([]);\n    const [left, setLeft] = React.useState([0, 1, 2, 3]);\n    const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n    const leftChecked = intersection(checked, left);\n    const rightChecked = intersection(checked, right);\n\n    const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n    \n\nreturn (\n<form className={classes.form} >\n    {/* The input search field  */}\n    \n<Grid container spacing={2}>\n       \n       \n    \n        <Grid item xs='12'>\n            <Card className={classes.cardroot} >\n                    <CardContent>\n                        <Typography className={classes.title} color=\"primary\" gutterBottom>\n                        Presenting Complaints \n                        </Typography>\n                        \n                        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n                            <Grid item>{customList(left)}</Grid>\n                            <Grid item>\n                                <Grid container direction=\"column\" alignItems=\"center\">\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={handleAllRight}\n                                    disabled={left.length === 0}\n                                    aria-label=\"move all right\"\n                                >\n                                    ≫\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={handleCheckedRight}\n                                    disabled={leftChecked.length === 0}\n                                    aria-label=\"move selected right\"\n                                >\n                                    &gt;\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={handleCheckedLeft}\n                                    disabled={rightChecked.length === 0}\n                                    aria-label=\"move selected left\"\n                                >\n                                    &lt;\n                                </Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    className={classes.button}\n                                    onClick={handleAllLeft}\n                                    disabled={right.length === 0}\n                                    aria-label=\"move all left\"\n                                >\n                                    ≪\n                                </Button>\n                                </Grid>\n                            </Grid>\n                            <Grid item>{customList(right)}</Grid>\n                            </Grid>                       \n                    </CardContent>                      \n                </Card>\n        </Grid>\n\n    <br/>\n\n    </Grid>\n</form>    \n)\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    {\n      title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n      year: 1964,\n    },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n  ];\n  "]},"metadata":{},"sourceType":"module"}