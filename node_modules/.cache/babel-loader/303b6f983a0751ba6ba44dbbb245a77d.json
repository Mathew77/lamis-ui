{"ast":null,"code":"import _toConsumableArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/patient/PateintRegistationPage.jsx\";\nimport Page from 'components/Page';\nimport React, { useState, useEffect } from 'react';\nimport MatButton from '@material-ui/core/Button';\nimport './PatientRegistrationPage.css';\nimport { Col, Form, FormGroup, Input, Label, Row, Alert } from 'reactstrap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { IoMdFingerPrint } from \"react-icons/io\";\nimport { FaFileImport } from \"react-icons/fa\";\nimport { FaPlusSquare } from 'react-icons/fa';\nimport Spinner from 'react-bootstrap/Spinner'; // import { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\nimport 'react-widgets/dist/css/react-widgets.css'; //Date Picker\n\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment'; // React Notification\n\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Title from 'components/Title/CardTitle';\nimport { url } from 'axios/url';\nimport date from 'components/DateTime/BootstrapDate'; // import CountryStates from './CountryStates';\n//Dtate Picker package\n\nMoment.locale('en');\nmomentLocalizer();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n      marginBottom: 20\n    },\n    Select: {\n      height: 45,\n      width: 300\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    root: {\n      flexGrow: 1,\n      maxWidth: 752\n    },\n    demo: {\n      backgroundColor: theme.palette.background.default\n    },\n    inline: {\n      display: 'inline'\n    }\n  };\n});\n\nvar PatientRegistration = function PatientRegistration(props) {\n  var classes = useStyles();\n  var apiUrl = url + \"patients\";\n  var apicountries = url + \"countries\";\n  var apistate = url + \"state/country/\"; //Getting List of Countries and State\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      countries = _React$useState2[0],\n      setCountries = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      states = _React$useState4[0],\n      setStates = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      provinces = _React$useState6[0],\n      setProvinces = _React$useState6[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      relatives = _useState2[0],\n      setRelatives = _useState2[1];\n\n  var _useState3 = useState([{}]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      relative = _useState4[0],\n      setRelative = _useState4[1];\n\n  var relationshipTypes = [{\n    id: \"1\",\n    name: \"Father\"\n  }, {\n    id: \"2\",\n    name: \"Mother\"\n  }, {\n    id: \"3\",\n    name: \"Sister\"\n  }, {\n    id: \"4\",\n    name: \"Brother\"\n  }];\n\n  var _useState5 = useState({\n    hospitalNumber: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    facilityId: '1',\n    dobEstimated: '',\n    educationId: '',\n    genderId: '',\n    maritalStatusId: '',\n    occupationId: '',\n    alternatePhoneNumber: '',\n    address1: '',\n    city: '',\n    countryId: '',\n    landmark: '',\n    provinceId: '',\n    zipCode: '',\n    stateId: '',\n    street: '',\n    dateRegistration: new Date()\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      patient = _useState6[0],\n      setPatient = _useState6[1];\n\n  consol;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showLoading = _useState8[0],\n      setShowLoading = _useState8[1]; //Saving of Patient Registration \n\n\n  var savePatient = function savePatient(e) {\n    //toast.warn(\"Processing Registration\");\n    setShowLoading(true);\n    e.preventDefault();\n    var data = {\n      hospitalNumber: patient.hospitalNumber,\n      dateRegistration: patient.dateRegistration,\n      facilityId: '1',\n      firstName: patient.firstName,\n      lastName: patient.lastName,\n      email: patient.email,\n      dob: patient.dob,\n      maritalStatusId: patient.maritalStatusId,\n      occupationId: patient.occupationId,\n      genderId: patient.genderId,\n      educationId: patient.educationId,\n      address1: patient.address1,\n      city: '1',\n      countryId: '1',\n      zipCode: patient.zipCode,\n      stateId: '1',\n      street: patient.street,\n      provinceId: 1,\n      personRelatives: relatives,\n      titleId: 1\n    };\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/patient');\n      toast.success(\"Patient Registration Successful!\");\n    }).catch(function (error) {\n      setShowLoading(false);\n    });\n  }; //End of the Saving the Patient Registration\n\n\n  var onChange = function onChange(e) {\n    e.persist();\n    setPatient(_objectSpread({}, patient, _defineProperty({}, e.target.name, e.target.value)));\n  }; //Get countries\n\n\n  useEffect(function () {\n    function getCharacters() {\n      return _getCharacters.apply(this, arguments);\n    }\n\n    function _getCharacters() {\n      _getCharacters = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, body, defaultCountryId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(apicountries);\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                body = _context.sent;\n                setCountries(body.map(function (_ref) {\n                  var name = _ref.name,\n                      id = _ref.id;\n                  return {\n                    label: name,\n                    value: id\n                  };\n                }));\n                defaultCountryId = body.find(function (x) {\n                  return x.name === 'Nigeria';\n                }).id;\n                setPatient(_objectSpread({}, patient, {\n                  countryId: defaultCountryId\n                }));\n                setStateByCountryId(defaultCountryId);\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 13]]);\n      }));\n      return _getCharacters.apply(this, arguments);\n    }\n\n    getCharacters();\n  }, []); //Get States from selected country \n\n  var getStates = function getStates(e) {\n    setPatient(_objectSpread({}, patient, _defineProperty({}, e.target.name, e.target.value)));\n    var getCountryId = e.target.value;\n    setStateByCountryId(getCountryId);\n  };\n\n  function setStateByCountryId(getCountryId) {\n    function getCharacters() {\n      return _getCharacters2.apply(this, arguments);\n    }\n\n    function _getCharacters2() {\n      _getCharacters2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response, stateList;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(apistate + getCountryId);\n\n              case 2:\n                response = _context2.sent;\n                _context2.next = 5;\n                return response.json();\n\n              case 5:\n                stateList = _context2.sent;\n                setStates(stateList.map(function (_ref2) {\n                  var name = _ref2.name,\n                      id = _ref2.id;\n                  return {\n                    label: name,\n                    value: id\n                  };\n                }));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getCharacters2.apply(this, arguments);\n    }\n\n    getCharacters();\n  } //fetch province\n\n\n  var getProvinces = function getProvinces(e) {\n    setPatient(_objectSpread({}, patient, _defineProperty({}, e.target.name, e.target.value)));\n    var stateId = e.target.value;\n\n    function getCharacters() {\n      return _getCharacters3.apply(this, arguments);\n    }\n\n    function _getCharacters3() {\n      _getCharacters3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var response, provinceList;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"/api/province/state/\" + stateId);\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                provinceList = _context3.sent;\n                setProvinces(provinceList.map(function (_ref3) {\n                  var name = _ref3.name,\n                      id = _ref3.id;\n                  return {\n                    label: name,\n                    value: id\n                  };\n                }));\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _getCharacters3.apply(this, arguments);\n    }\n\n    getCharacters();\n  };\n\n  function getRelationshipName(id) {\n    return relationshipTypes.find(function (x) {\n      return x.id === id;\n    }).name;\n  }\n\n  var addRelative = function addRelative(value) {\n    var allRelatives = [].concat(_toConsumableArray(relatives), [value]);\n    setRelatives(allRelatives);\n  };\n\n  var removeRelative = function removeRelative(index) {\n    var allRelatives = _toConsumableArray(relatives);\n\n    allRelatives.splice(index, 1);\n    setRelatives(allRelatives);\n  };\n\n  var handleAddRelative = function handleAddRelative(e) {\n    e.preventDefault();\n    if (!relative) return;\n    addRelative(relative);\n    setRelative({\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      otherNames: \"\",\n      relationshipTypeId: \"\",\n      mobilePhoneNumber: \"\",\n      address: \"\"\n    });\n  };\n\n  var onRelativeChange = function onRelativeChange(e) {\n    //  e.preventDefault();\n    setRelative(_objectSpread({}, relative, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return React.createElement(Page, {\n    title: \"Patient Regsitration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    autoClose: 2000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), React.createElement(Alert, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"All Information with Asterisks(*) are compulsory\"), React.createElement(Form, {\n    onSubmit: savePatient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"Basic Information \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \" float-right mr-1\",\n    startIcon: React.createElement(FaFileImport, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Import image\"), React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \" float-right mr-1\",\n    startIcon: React.createElement(IoMdFingerPrint, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Finger print\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  })), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Patient Id\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Patient ID \",\n    value: patient.hospitalNumber,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Date Of Registration\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dateRegistration\",\n    id: \"dateRegistration\",\n    value: patient.dateRegistration,\n    onChange: function onChange(value1) {\n      return setPatient(_objectSpread({}, patient, {\n        dateRegistration: value1\n      }));\n    },\n    defaultValue: new Date(),\n    max: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }), React.createElement(\"date\", {\n    onchange: onChange,\n    value: patient.dateRegistration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    placeholder: \"First Name\",\n    value: patient.firstName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, \"Other Name(s)\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"otherNames\",\n    id: \"otherNames\",\n    placeholder: \"Middle Name\",\n    value: patient.otherNames,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, \"Last Name \"), React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    placeholder: \"Last Name\",\n    value: patient.lastName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"genderId\",\n    id: \"genderId\",\n    value: patient.genderId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \"Male\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"occupation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, \"Occupation\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"occupationId\",\n    id: \"occupationId\",\n    value: patient.occupationId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"Students\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, \"Business\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Government\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"qualification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"Hightest Qualification\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"educationId\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"PHD\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, \"MSC\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"BSC\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, \"HND\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, \"NCE\"))))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"Marital Status\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"maritalStatusId\",\n    id: \"maritalStatusId\",\n    value: patient.maritalStatusId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, \"Single\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, \"Married\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, \"Divorce\")))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, \"Date OF Birth\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dob\",\n    dropUp: true,\n    onChange: function onChange(value1) {\n      return setPatient(_objectSpread({}, patient, {\n        dob: value1\n      }));\n    },\n    max: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, \"Year\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"year\",\n    id: \"year\",\n    placeholder: \"Year\",\n    value: patient.Estimate,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, \"Months\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"months\",\n    id: \"months\",\n    placeholder: \"Months\",\n    value: patient.EstimateMonths,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"Days\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"days\",\n    id: \"days\",\n    placeholder: \"Days\",\n    value: patient.EstimateDays,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }))))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }), \"Estimates Date of  Birth\"))))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"Contact Details \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  })), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"phoneNumber\",\n    id: \"phoneNumber\",\n    placeholder: \"Phone Number\",\n    value: patient.mobilePhoneNumber,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"altPhoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, \"Alt. Phone Number\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"alternatePhoneNumber\",\n    id: \"alternatePhoneNumber\",\n    placeholder: \"Alternative Number\",\n    value: patient.alternatePhoneNumber,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"emailAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email Address\",\n    value: patient.email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  })))))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, \" Address \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  })), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"countryId\",\n    id: \"countryId\",\n    value: patient.countryId,\n    onChange: getStates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, countries.map(function (_ref4) {\n    var label = _ref4.label,\n        value = _ref4.value;\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, label);\n  })))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"stressAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, \"State\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"stateId\",\n    id: \"stateId\",\n    placeholder: \"Select State\",\n    value: patient.stateId,\n    onChange: getProvinces,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, states.map(function (_ref5) {\n    var label = _ref5.label,\n        value = _ref5.value;\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, label);\n  })))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lga\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, \"Province/District/LGA \"), React.createElement(Input, {\n    type: \"select\",\n    name: \"provinceId\",\n    id: \"provinceId\",\n    placeholder: \"Select Province\",\n    value: patient.provinceId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }, provinces.map(function (_ref6) {\n    var label = _ref6.label,\n        value = _ref6.value;\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, label);\n  }))))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }, \"Street Address\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    id: \"city\",\n    placeholder: \"City\",\n    value: patient.city,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"landMark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, \"Land Mark\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"landmark\",\n    id: \"landmark\",\n    placeholder: \"Land Mark\",\n    value: patient.landmark,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504\n    },\n    __self: this\n  })))))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, \"Relatives\", React.createElement(MatButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \" float-right mr-1\",\n    startIcon: React.createElement(FaPlusSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }),\n    onClick: handleAddRelative,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520\n    },\n    __self: this\n  }, \"Add Relative\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527\n    },\n    __self: this\n  }), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"occupation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531\n    },\n    __self: this\n  }, \"Relationship Type\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"relationshipTypeId\",\n    id: \"relationshipTypeId\",\n    value: relative.relationshipTypeId,\n    onChange: onRelativeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533\n    },\n    __self: this\n  }, \"Select Relative Relationship Type\"), relationshipTypes.map(function (_ref7) {\n    var id = _ref7.id,\n        name = _ref7.name;\n    return React.createElement(\"option\", {\n      key: id,\n      value: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, name);\n  })))), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    value: relative.firstName,\n    placeholder: \"First Name\",\n    onChange: onRelativeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550\n    },\n    __self: this\n  }, \"Middle Name\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"otherNames\",\n    id: \"otherNames\",\n    placeholder: \"Middle Name\",\n    value: relative.otherNames,\n    onChange: onRelativeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556\n    },\n    __self: this\n  }, \"Last Name \"), React.createElement(Input, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    placeholder: \"Last Name\",\n    value: relative.lastName,\n    onChange: onRelativeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    form: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"relativePhoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565\n    },\n    __self: this\n  }, \"Phone No.\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"relativePhoneNumber\",\n    id: \"relativePhoneNumber\",\n    placeholder: \"Relative Phone No.\",\n    value: relative.mobilePhoneNumber,\n    onChange: function onChange(e) {\n      return setRelative(_objectSpread({}, relative, {\n        mobilePhoneNumber: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Relative Email Address\",\n    value: relative.email,\n    onChange: onRelativeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577\n    },\n    __self: this\n  }, \"Address\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"address\",\n    id: \"address\",\n    placeholder: \"Relative Address\",\n    onChange: onRelativeChange,\n    value: relative.address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.demo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585\n    },\n    __self: this\n  }, relatives.map(function (relative, index) {\n    return React.createElement(RelativeList, {\n      key: index,\n      index: index,\n      relative: relative,\n      removeRelative: removeRelative,\n      relationshipTypeName: getRelationshipName(relative.relationshipTypeId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    });\n  }))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604\n    },\n    __self: this\n  }, \"Loading...\")))), React.createElement(MatButton, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Link, {\n    to: \"/patients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618\n    },\n    __self: this\n  }, React.createElement(MatButton, {\n    className: classes.button,\n    startIcon: React.createElement(CancelIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619\n    },\n    __self: this\n  }, \"Cancel\"))))))));\n};\n\nfunction RelativeList(_ref8) {\n  var relative = _ref8.relative,\n      index = _ref8.index,\n      removeRelative = _ref8.removeRelative,\n      relationshipTypeName = _ref8.relationshipTypeName;\n  return React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, relationshipTypeName, \", \", relative.firstName, \" \", relative.otherNames, \" \", relative.lastName),\n    secondary: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      color: \"textPrimary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, relative.mobilePhoneNumber, \" \", relative.email, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    })), relative.address),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    onClick: function onClick() {\n      return removeRelative(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662\n    },\n    __self: this\n  }))));\n}\n\nexport default PatientRegistration;","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/patient/PateintRegistationPage.jsx"],"names":["Page","React","useState","useEffect","MatButton","Col","Form","FormGroup","Input","Label","Row","Alert","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","DeleteIcon","Typography","Link","Card","CardContent","SaveIcon","CancelIcon","IoMdFingerPrint","FaFileImport","FaPlusSquare","Spinner","axios","DateTimePicker","Moment","momentLocalizer","toast","ToastContainer","Title","url","date","locale","useStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","default","inline","PatientRegistration","props","classes","apiUrl","apicountries","apistate","countries","setCountries","states","setStates","provinces","setProvinces","relatives","setRelatives","relative","setRelative","relationshipTypes","id","name","hospitalNumber","firstName","lastName","email","facilityId","dobEstimated","educationId","genderId","maritalStatusId","occupationId","alternatePhoneNumber","address1","city","countryId","landmark","provinceId","zipCode","stateId","street","dateRegistration","Date","patient","setPatient","consol","showLoading","setShowLoading","savePatient","e","preventDefault","data","dob","personRelatives","titleId","post","then","result","history","push","success","catch","error","onChange","persist","target","value","getCharacters","fetch","response","json","body","map","label","defaultCountryId","find","x","setStateByCountryId","console","log","getStates","getCountryId","stateList","getProvinces","provinceList","getRelationshipName","addRelative","allRelatives","removeRelative","index","splice","handleAddRelative","otherNames","relationshipTypeId","mobilePhoneNumber","address","onRelativeChange","value1","Estimate","EstimateMonths","EstimateDays","RelativeList","relationshipTypeName"],"mappings":"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","sourcesContent":["import Page from 'components/Page';\nimport React, { useState, useEffect } from 'react';\nimport MatButton from '@material-ui/core/Button';\nimport './PatientRegistrationPage.css'\nimport {\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Alert,\n} from 'reactstrap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {  Card,CardContent, }\nfrom '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { IoMdFingerPrint } from \"react-icons/io\";\nimport { FaFileImport } from \"react-icons/fa\";\nimport {FaPlusSquare} from 'react-icons/fa';\nimport Spinner from 'react-bootstrap/Spinner';\n// import { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\nimport 'react-widgets/dist/css/react-widgets.css';\n//Date Picker\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\n// React Notification\nimport { toast } from \"react-toastify\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Title from 'components/Title/CardTitle';\nimport {url} from 'axios/url';\nimport date from 'components/DateTime/BootstrapDate'\n// import CountryStates from './CountryStates';\n//Dtate Picker package\nMoment.locale('en');\nmomentLocalizer();\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center', \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    }, \n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n      marginBottom: 20\n    },\n    Select: {\n      height:45,\n      width: 300,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n      },\n      demo: {\n        backgroundColor: theme.palette.background.default,\n      },\n      inline: {\n        display: 'inline',\n      },\n    \n  }));\n\n\nconst PatientRegistration = (props) => {\n    const classes = useStyles();\n    const apiUrl = url+\"patients\";\n    const apicountries = url+\"countries\";\n    const apistate = url+\"state/country/\";\n    //Getting List of Countries and State\n    const [countries, setCountries] = React.useState([]);\n    const [states, setStates] = React.useState([]);\n    const [provinces, setProvinces] = React.useState([]);\n    const [relatives, setRelatives] = useState([]);\n    const [relative, setRelative] = useState([{}]);\n    const relationshipTypes = [{id:\"1\", name:\"Father\"},{id:\"2\", name:\"Mother\"},\n    {id:\"3\", name:\"Sister\"},{id:\"4\", name:\"Brother\"}];\n\n    const [patient, setPatient] = useState({ \n            hospitalNumber:'',\n            firstName: '',\n            lastName: '', \n            email:'',\n            facilityId: '1',\n            dobEstimated:'',\n            educationId:'',\n            genderId:'',\n            maritalStatusId:'',\n            occupationId:'',\n            alternatePhoneNumber:'',\n            address1:'',\n            city:'',\n            countryId:'',\n            landmark:'',\n            provinceId:'',\n            zipCode:'',\n            stateId:'',\n            street:'',\n            dateRegistration: new Date()\n    });  \nconsol\n    const [showLoading, setShowLoading] = useState(false);\n  //Saving of Patient Registration \n    const savePatient = (e) => {\n      //toast.warn(\"Processing Registration\");\n      setShowLoading(true);\n      e.preventDefault();\n      const data = { \n                    hospitalNumber: patient.hospitalNumber,           \n                    dateRegistration: patient.dateRegistration,\n                    facilityId: '1',\n                    firstName: patient.firstName,\n                    lastName:  patient.lastName, \n                    email:patient.email,\n                    dob:patient.dob,\n                    maritalStatusId:patient.maritalStatusId,\n                    occupationId:patient.occupationId,\n                    genderId:patient.genderId,\n                    educationId:patient.educationId,           \n                    address1:patient.address1,\n                    city:'1',\n                    countryId:'1',\n                    zipCode:patient.zipCode,\n                    stateId:'1',\n                    street:patient.street,\n                    provinceId: 1,\n                    personRelatives: relatives,\n                    titleId:1\n                };\n              \n      axios.post(apiUrl, data)\n        .then((result) => {          \n          setShowLoading(false);\n          props.history.push('/patient')\n          toast.success(\"Patient Registration Successful!\");\n        }).catch((error) => {\n        setShowLoading(false)\n        }\n        );\n    };\n  //End of the Saving the Patient Registration\n    const onChange = (e) => {\n      e.persist();     \n      setPatient({...patient, [e.target.name]: e.target.value});\n    } \n    //Get countries\n    useEffect(() => {\n        async function getCharacters() {\n            try{\n          const response = await fetch(apicountries);\n          const body = await response.json();          \n          setCountries(body.map(({ name, id }) => ({ label: name, value: id })));\n          const defaultCountryId = body.find(x => x.name === 'Nigeria').id;\n          setPatient({...patient, countryId: defaultCountryId});\n          setStateByCountryId(defaultCountryId);\n          }catch(error){\n              console.log(error);\n          }\n        }\n        getCharacters();\n      }, []);\n\n\n    //Get States from selected country \n    const getStates = (e) => {\n        setPatient({...patient, [e.target.name]: e.target.value});\n        const getCountryId = e.target.value;\n        setStateByCountryId(getCountryId);\n    }\n\n    function setStateByCountryId (getCountryId) {\n        async function getCharacters() {\n            const response = await fetch(apistate+getCountryId);            \n            const stateList = await response.json();\n            setStates(stateList.map(({ name, id }) => ({ label: name, value: id })));\n          }\n          getCharacters();\n    }\n\n    //fetch province\n    const getProvinces = (e) => {\n        setPatient({...patient, [e.target.name]: e.target.value});\n        const stateId = e.target.value;\n        async function getCharacters() {\n            const response = await fetch(\"/api/province/state/\"+stateId);\n            const provinceList = await response.json();\n            setProvinces(provinceList.map(({ name, id }) => ({ label: name, value: id })));\n          }\n          getCharacters();\n    }\n\n    function getRelationshipName(id) {\n        return relationshipTypes.find(x => x.id === id).name;\n    }\n    \n\n      const addRelative = value => {\n        const allRelatives = [...relatives,  value ];\n        setRelatives(allRelatives);\n      };\n      \n      const removeRelative = index => {\n        const allRelatives = [...relatives];\n        allRelatives.splice(index, 1);\n        setRelatives(allRelatives);\n      };\n\n      const handleAddRelative = e => {\n        e.preventDefault();\n        if (!relative) return;\n        addRelative(relative);\n        setRelative({email:\"\", firstName:\"\", lastName:\"\",\n            otherNames:\"\", relationshipTypeId:\"\", mobilePhoneNumber:\"\", address:\"\"});\n      };\n\n      const onRelativeChange = e => {\n        //  e.preventDefault();\n        setRelative({...relative, [e.target.name]: e.target.value});\n        }\n    \n  return (\n    <Page title=\"Patient Regsitration\" >\n        <ToastContainer autoClose={2000} />\n        <Alert color=\"primary\">\n        All Information with Asterisks(*) are compulsory \n      </Alert>\n    <Form onSubmit={savePatient}>\n         {/* First  row form entry  for Demographics*/}\n        <Row>\n        <Col xl={12} lg={12} md={12}>\n        <Card className={classes.cardBottom}>  \n            <CardContent>\n                <Title >Basic Information <br/>\n                    \n                        <MatButton\n                            variant=\"contained\"\n                            color=\"primary\" className=\" float-right mr-1\"\n                            startIcon={<FaFileImport />}>\n                            Import image\n                        </MatButton>\n                        <MatButton\n                            variant=\"contained\"\n                            color=\"primary\" className=\" float-right mr-1\"  startIcon={<IoMdFingerPrint />}>\n                            Finger print\n                        </MatButton> \n                        <br/> \n                </Title>\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"hospitalNumber\">Patient Id</Label>\n                                <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Patient ID \" value={patient.hospitalNumber} onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            \n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"middleName\">Date Of Registration</Label>\n                                \n                                <DateTimePicker time={false} name=\"dateRegistration\"  id=\"dateRegistration\"   value={patient.dateRegistration}   onChange={value1 => setPatient({...patient, dateRegistration: value1})}\n                                defaultValue={new Date()} max={new Date()}\n                                \n                                />\n                                <date onchange={onChange} value={patient.dateRegistration} />\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" value={patient.firstName} onChange={onChange} />\n                            </FormGroup>\n                            </Col>\n                            \n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"middleName\">Other Name(s)</Label>\n                                <Input type=\"text\" name=\"otherNames\" id=\"otherNames\" placeholder=\"Middle Name\" value={patient.otherNames} onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name </Label>\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={patient.lastName} onChange={onChange} />\n                            </FormGroup>\n                            </Col>\n                        </Row>\n                        \n                        <Row form>\n                            <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"maritalStatus\">Gender</Label>\n                                    <Input type=\"select\" name=\"genderId\" id=\"genderId\" value={patient.genderId} onChange={onChange} >\n                                        <option value=\"1\">Female</option>\n                                        <option value=\"2\">Male</option>\n                                        \n                                    </Input>\n                                </FormGroup>  \n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"occupation\">Occupation</Label>\n                                <Input type=\"select\" name=\"occupationId\" id=\"occupationId\" value={patient.occupationId} onChange={onChange}>\n                                    <option value=\"1\">Students</option>\n                                    <option value=\"2\">Business</option>\n                                    <option value=\"3\">Government</option>\n                                </Input>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"qualification\">Hightest Qualification</Label>\n                                <Input type=\"select\" name=\"educationId\" onChange={onChange}>\n                                    <option value=\"1\">PHD</option>\n                                    <option value=\"2\">MSC</option>\n                                    <option value=\"3\">BSC</option>\n                                    <option value=\"4\">HND</option>\n                                    <option value=\"5\">NCE</option>\n                                </Input>\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n                        \n                        <Row form>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"maritalStatus\">Marital Status</Label>\n                                <Input type=\"select\" name=\"maritalStatusId\" id=\"maritalStatusId\" value={patient.maritalStatusId} onChange={onChange}>\n                                    <option value=\"1\">Single</option>\n                                    <option value=\"2\">Married</option>\n                                    <option value=\"3\">Divorce</option>\n                                </Input>\n                            </FormGroup>  \n                            </Col>\n                            <Col md={4}>\n                            <FormGroup >\n                                <Label>Date OF Birth</Label>\n                                <DateTimePicker time={false} name=\"dob\"  dropUp onChange={value1 => setPatient({...patient, dob: value1})} max={new Date()} />\n\n                            </FormGroup>\n                            </Col>\n                            <Col md={4} >\n                                {/* Estimate Date of birth in a row  */}\n                                <Row form>\n                                        <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"year\">Year</Label>\n                                            <Input type=\"text\" name=\"year\" id=\"year\" placeholder=\"Year\" value={patient.Estimate} onChange={onChange} />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"year\">Months</Label>\n                                            <Input type=\"text\" name=\"months\" id=\"months\" placeholder=\"Months\" value={patient.EstimateMonths} onChange={onChange} />\n                                        </FormGroup>\n                                        </Col>\n                                        <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"year\">Days</Label>\n                                            <Input type=\"text\" name=\"days\" id=\"days\" placeholder=\"Days\" value={patient.EstimateDays} onChange={onChange} />\n                                        </FormGroup>\n                                        </Col>\n                                </Row>\n                            </Col>           \n                            <Col md={4}>\n                            <FormGroup check>\n                                <Label></Label>\n                                <Input type=\"checkbox\" />Estimates Date of  Birth\n                               \n                            </FormGroup>\n                            </Col>\n                        </Row>\n                        \n                   \n                </CardContent>\n\n            </Card>\n            </Col>\n        </Row>\n        {/* Second row form entry  for contact details*/}\n        <Row>\n        <Col xl={12} lg={12} md={12}>\n            <Card className={classes.cardBottom}>  \n                                         \n                <CardContent>\n                <Title >Contact Details <br/></Title>\n                        <Row form>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"phoneNumber\">Phone Number</Label>\n                                <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"Phone Number\" value={patient.mobilePhoneNumber} \n                                onChange={onChange} />\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"altPhoneNumber\">Alt. Phone Number</Label>\n                                <Input type=\"text\" name=\"alternatePhoneNumber\" id=\"alternatePhoneNumber\" placeholder=\"Alternative Number\" value={patient.alternatePhoneNumber}  onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"emailAddress\">Email Address</Label>\n                                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email Address\" value={patient.email} onChange={onChange}  />\n                            </FormGroup>\n                            </Col>\n                        </Row>\n\n\n                </CardContent>\n            </Card>\n            </Col>\n        </Row>\n\n    {/* Third  row form entry  for Contact Address*/}\n    <Row>\n        <Col xl={12} lg={12} md={12}>\n        <Card className={classes.cardBottom}>  \n                                         \n            <CardContent>\n            <Title > Address <br/></Title>\n                \n                        <Row form>\n                                <Col md={4}>\n                                    <FormGroup>\n                                        <Label for=\"country\">Country</Label>\n                                            <Input type=\"select\" name=\"countryId\" id=\"countryId\" value={patient.countryId}  onChange={getStates}>\n                                                {countries.map(({ label, value }) => (\n                                                <option key={value} value={value}>\n                                                {label}\n                                                </option>\n                                                ))}\n                                            </Input>\n\n                                    </FormGroup>\n                                </Col>\n                                \n                                <Col md={4}>\n                                <FormGroup>\n                                    <Label for=\"stressAddress\">State</Label>\n                                    <Input type=\"select\" name=\"stateId\" id=\"stateId\" placeholder=\"Select State\" value={patient.stateId} onChange={getProvinces}>\n                                        {states.map(({ label, value }) => (\n                                            <option key={value} value={value}>\n                                            {label}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"lga\">Province/District/LGA </Label>\n                                <Input type=\"select\" name=\"provinceId\" id=\"provinceId\" placeholder=\"Select Province\" value={patient.provinceId} onChange={onChange}>\n                                        {provinces.map(({ label, value }) => (\n                                            <option key={value} value={value}>\n                                            {label}\n                                            </option>\n                                        ))}\n                                    </Input>\n                            </FormGroup>\n                            </Col>\n                            \n                           \n                        </Row>\n                        \n                        <Row form>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"city\">Street Address</Label>\n                                <Input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" value={patient.city}  onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            \n                            <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"landMark\">Land Mark</Label>\n                                <Input type=\"text\" name=\"landmark\" id=\"landmark\" placeholder=\"Land Mark\" value={patient.landmark}  onChange={onChange}/>\n                            </FormGroup>\n                            </Col>\n                            \n                        </Row>\n                </CardContent>\n            </Card>\n            </Col>\n        </Row>\n         {/* fourth  row form entry  for Relatives*/}\n         <Row>\n            <Col xl={12} lg={12} md={12}>\n            <Card className={classes.cardBottom}>                                          \n                <CardContent>\n                    <Title > \n                        Relatives \n                        <MatButton\n                            variant=\"contained\"\n                            color=\"primary\" className=\" float-right mr-1\"  startIcon={<FaPlusSquare />}  onClick={handleAddRelative}>\n                            Add Relative \n                        </MatButton> \n                   \n                    </Title>\n                    <br/>\n                            <Row form>\n                            <Col md={3}>\n                            <FormGroup>\n                                <Label for=\"occupation\">Relationship Type</Label>\n                                <Input type=\"select\" name=\"relationshipTypeId\" id=\"relationshipTypeId\" value={relative.relationshipTypeId} onChange={onRelativeChange}  >\n                                <option value=\"\">Select Relative Relationship Type</option>\n                                {relationshipTypes.map(({ id, name }) => (\n                                                <option key={id} value={id}>\n                                                {name}\n                                                </option>\n                                                ))}\n                                </Input>\n                            </FormGroup>\n                            </Col>\n                                <Col md={3}>\n                                <FormGroup>\n                                    <Label for=\"firstName\">First Name</Label>\n                                    <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={relative.firstName}  placeholder=\"First Name\" onChange={onRelativeChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={3}>\n                                <FormGroup>\n                                    <Label for=\"middleName\">Middle Name</Label>\n                                    <Input type=\"text\" name=\"otherNames\" id=\"otherNames\" placeholder=\"Middle Name\"  value={relative.otherNames} onChange={onRelativeChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={3}>\n                                <FormGroup>\n                                    <Label for=\"lastName\">Last Name </Label>\n                                    <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" value={relative.lastName} onChange={onRelativeChange}/>\n                                </FormGroup>\n                                </Col>\n                            </Row>\n                            \n                            <Row form>\n                                <Col md={3}>\n                                <FormGroup>\n                                    <Label for=\"relativePhoneNumber\">Phone No.</Label>\n                                    <Input type=\"text\" name=\"relativePhoneNumber\" id=\"relativePhoneNumber\" placeholder=\"Relative Phone No.\" value={relative.mobilePhoneNumber} onChange={e => setRelative({...relative, mobilePhoneNumber: e.target.value})}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={3}>\n                                <FormGroup>\n                                    <Label for=\"email\">Email Address</Label>\n                                    <Input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Relative Email Address\" value={relative.email} onChange={onRelativeChange}/>\n                                </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"address\">Address</Label>\n                                    <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Relative Address\" onChange={onRelativeChange} value={relative.address}/>\n                                </FormGroup>  \n                                </Col>\n                            </Row>\n                            <Row>\n                            <Col md={12}>\n                            <div className={classes.demo}>\n                            <List>\n                            {relatives.map((relative, index) => (\n                                    <RelativeList\n                                    key={index}\n                                    index={index}\n                                    relative={relative}\n                                    removeRelative={removeRelative}\n                                    relationshipTypeName={getRelationshipName(relative.relationshipTypeId)}\n                                    />\n                                ))}\n                                            </List>\n                                </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                            <Col md={12}>\n                            {showLoading && \n                                \n                                <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                                </Spinner> \n                            } \n                            </Col> \n                            </Row>\n                             <MatButton  \n                                type=\"submit\" \n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<SaveIcon />}\n                             >\n                                Save\n                            </MatButton>\n                            <Link to=\"/patients\">\n                                <MatButton\n                                        \n                                        className={classes.button}\n                                        startIcon={<CancelIcon />}\n                                    >\n                                    Cancel\n                                </MatButton>  \n                            </Link>\n                                \n                    </CardContent>\n                </Card>\n                </Col>\n            </Row>\n    </Form>\n</Page>\n  );\n};\n\n\nfunction RelativeList ({ relative, index, removeRelative, relationshipTypeName }) {\n\n    return (\n        <ListItem>\n                  <ListItemText\n                    primary={ <React.Fragment>\n                        {relationshipTypeName}, {relative.firstName} {relative.otherNames} {relative.lastName}</React.Fragment> }\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                         \n                          color=\"textPrimary\"\n                        >\n                        {relative.mobilePhoneNumber} {relative.email} <br></br>\n                        </Typography>\n                        {relative.address}\n                      </React.Fragment>\n                    }\n                  />\n                  \n                  <ListItemSecondaryAction  onClick={() => removeRelative(index)}>\n                    <IconButton edge=\"end\" aria-label=\"delete\">\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                \n                \n    );\n  } \nexport default PatientRegistration;"]},"metadata":{},"sourceType":"module"}