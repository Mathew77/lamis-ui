{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Consultation/DataTableList.jsx\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MdDashboard } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { url } from 'axios/url';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      minWidth: 650\n    },\n    button: {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  };\n});\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 11\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function (theme) {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n})(TableRow);\nvar apistate = url + \"patients\";\nuseEffect(function () {\n  var GetData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios(apistate);\n\n            case 2:\n              result = _context.sent;\n              setData(result.data);\n              console.log(result.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function GetData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  GetData();\n}, []);\nexport default function TestOrder() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  {\n    data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n      return React.createElement(TableContainer, {\n        component: Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-label\": \"caption table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(StyledTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Patient ID\"), React.createElement(StyledTableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Patient Name\"), React.createElement(StyledTableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(StyledTableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Total\"), React.createElement(StyledTableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return React.createElement(StyledTableRow, {\n          key: row.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, row.calories), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, row.fat), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, row.carbs), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/consultation-dashbaord\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"View Dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"View Dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(MdDashboard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))))));\n      }))));\n    });\n  }\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Consultation/DataTableList.jsx"],"names":["React","makeStyles","withStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Tooltip","IconButton","MdDashboard","Link","useState","useEffect","axios","url","useStyles","theme","table","minWidth","button","margin","spacing","width","StyledTableCell","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","apistate","GetData","result","setData","data","console","log","TestOrder","classes","page","setPage","rowsPerPage","setRowsPerPage","slice","map","row","rows","name","calories","fat","carbs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  MdDashboard\n} from 'react-icons/md';\nimport {Link} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {url} from 'axios/url';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  button: {\n    margin: theme.spacing(1),\n    width:200,\n  },\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst apistate = url+\"patients\";\nuseEffect(() => {    \n  const GetData = async () => {    \n    const result = await axios(apistate);    \n    setData(result.data);  \n    console.log(result.data);   \n  }  \n  GetData();     \n\n}, []); \n\nexport default function TestOrder() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);  \n  const [data, setData] = useState([]);   \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);  \n  {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {  \n  return ( \n      <TableContainer component={Paper}>                \n        <Table className={classes.table} aria-label=\"caption table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Patient ID</StyledTableCell>\n              <StyledTableCell align=\"center\">Patient Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Phone Number</StyledTableCell>\n              <StyledTableCell align=\"center\">Total</StyledTableCell>\n              <StyledTableCell align=\"center\">Action</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n                <StyledTableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.calories}</TableCell>\n                  <TableCell align=\"center\">{row.fat}</TableCell>\n                  <TableCell align=\"center\">{row.carbs}</TableCell>\n                  <TableCell align=\"center\">\n                  <Link to=\"/consultation-dashbaord\">\n                    <Tooltip title=\"View Dashboard\">\n                        <IconButton aria-label=\"View Dashboard\">\n                        <MdDashboard />\n                        </IconButton>\n                    </Tooltip>\n                    </Link>\n                </TableCell>\n                </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n     \n  );\n\n})} \n}"]},"metadata":{},"sourceType":"module"}