{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/pages/TestPage2.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar ModalExample = function ModalExample(props) {\n  var buttonLabel = props.buttonLabel,\n      className = props.className;\n  var user = 'mathew';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nestedModal = _useState4[0],\n      setNestedModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      closeAll = _useState6[0],\n      setCloseAll = _useState6[1];\n\n  var toggle = function toggle(user) {\n    setModal(!modal);\n  };\n\n  var toggleNested = function toggleNested(user) {\n    setNestedModal(!nestedModal);\n    setCloseAll(false);\n  };\n\n  var toggleAll = function toggleAll() {\n    setNestedModal(!nestedModal);\n    setCloseAll(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, buttonLabel), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Modal title\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"success\",\n    onClick: toggleNested,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Show Nested Modal\"), React.createElement(Modal, {\n    isOpen: nestedModal,\n    toggle: toggleNested,\n    onClosed: closeAll ? toggle : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Nested Modal title\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Stuff and things\", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, user)), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggleNested,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Done\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggleAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"All Done\")))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Do Something\"), ' ', React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default ModalExample;","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/pages/TestPage2.jsx"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalExample","props","buttonLabel","className","user","modal","setModal","nestedModal","setNestedModal","closeAll","setCloseAll","toggle","toggleNested","toggleAll","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MAE5BC,WAF4B,GAI1BD,KAJ0B,CAE5BC,WAF4B;AAAA,MAG5BC,SAH4B,GAI1BF,KAJ0B,CAG5BE,SAH4B;AAK9B,MAAMC,IAAI,GAAG,QAAb;;AAL8B,kBAMJV,QAAQ,CAAC,KAAD,CANJ;AAAA;AAAA,MAMvBW,KANuB;AAAA,MAMhBC,QANgB;;AAAA,mBAOQZ,QAAQ,CAAC,KAAD,CAPhB;AAAA;AAAA,MAOvBa,WAPuB;AAAA,MAOVC,cAPU;;AAAA,mBAQEd,QAAQ,CAAC,KAAD,CARV;AAAA;AAAA,MAQvBe,QARuB;AAAA,MAQbC,WARa;;AAU9B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACP,IAAD,EAAU;AACnBE,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAEL,GAHD;;AAIA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACR,IAAD,EAAU;AAC7BI,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAG,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAIA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBL,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAG,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAEC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCT,WAAzC,CADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,KAAf;AAAsB,IAAA,MAAM,EAAEM,MAA9B;AAAsC,IAAA,SAAS,EAAER,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ucAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,WAAf;AAA4B,IAAA,MAAM,EAAEK,YAApC;AAAkD,IAAA,QAAQ,EAAEH,QAAQ,GAAGE,MAAH,GAAYG,SAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,IAAJ,CADF,CAFF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEQ,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAC+D,GAD/D,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CALF,CAJF,CAFF,EAiBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACiE,GADjE,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAjBF,CAFF,CADF;AA2BD,CAlDD;;AAoDA,eAAeX,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ModalExample = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const user = 'mathew';\n  const [modal, setModal] = useState(false);\n  const [nestedModal, setNestedModal] = useState(false);\n  const [closeAll, setCloseAll] = useState(false);\n\n  const toggle = (user) => {\n        setModal(!modal);\n  \n  }\n  const toggleNested = (user) => {\n    setNestedModal(!nestedModal);\n    setCloseAll(false);\n  }\n  const toggleAll = () => {\n    setNestedModal(!nestedModal);\n    setCloseAll(true);\n  }\n\n  return (\n    <div>\n      <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n          <br />\n          <Button color=\"success\" onClick={toggleNested}>Show Nested Modal</Button>\n          <Modal isOpen={nestedModal} toggle={toggleNested} onClosed={closeAll ? toggle : undefined}>\n            <ModalHeader>Nested Modal title</ModalHeader>\n            <ModalBody>Stuff and things\n              <p>{user}</p>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={toggleNested}>Done</Button>{' '}\n              <Button color=\"secondary\" onClick={toggleAll}>All Done</Button>\n            </ModalFooter>\n          </Modal>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}