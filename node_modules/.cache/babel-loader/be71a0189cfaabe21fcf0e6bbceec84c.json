{"ast":null,"code":"import _defineProperty from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Hiv/Medication/Medication.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardBody, Col, Row, Form, Card, FormGroup, Label, Input } from 'reactstrap';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment'; //import moment from 'moment';\n\nimport { toast } from \"react-toastify\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport { url } from 'axios/url'; //Dtate Picker package\n\nMoment.locale('en');\nmomentLocalizer();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin: theme.spacing(7),\n      bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n      },\n      title: {\n        fontSize: 12\n      },\n      pos: {\n        fontSize: 11\n      },\n      cardContent: {\n        padding: 2\n      },\n      cardroot: {\n        margin: theme.spacing(1),\n        height: 250 + 'px !important'\n      }\n    },\n    alertmsge: {\n      marginTop: theme.spacing(2)\n    },\n    rootaccordia: {\n      width: '100%'\n    },\n    accordiaheading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    allergiesroot: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5)\n      }\n    },\n    checkboxroot: {\n      display: 'flex'\n    },\n    formControl: {\n      margin: theme.spacing(3)\n    },\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    formroot: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15)\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    icon: {\n      verticalAlign: 'bottom',\n      height: 20,\n      width: 20\n    },\n    details: {\n      alignItems: 'center'\n    },\n    column: {\n      flexBasis: '33.33%'\n    },\n    helper: {\n      borderLeft: \"2px solid \".concat(theme.palette.divider),\n      padding: theme.spacing(1, 2)\n    },\n    link: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    inforoot: {\n      width: '95%',\n      margin: 20,\n      backgroundColor: '#eee'\n    }\n  };\n});\nvar cardStyle = {\n  borbderColor: '#fff',\n  marginBottom: 10\n};\nexport default function Medication(props) {\n  var apicountries = url + \"encounters/pharmacy/drugs\";\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      countries = _React$useState2[0],\n      setCountries = _React$useState2[1]; //Get countries     \n\n\n  React.useEffect(function () {\n    function getCharacters() {\n      return _getCharacters.apply(this, arguments);\n    }\n\n    function _getCharacters() {\n      _getCharacters = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(apicountries);\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                body = _context.sent;\n                setCountries(body.map(function (_ref) {\n                  var genericName = _ref.genericName,\n                      id = _ref.id;\n                  return {\n                    label: genericName,\n                    value: id\n                  };\n                })); //console.log(body);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getCharacters.apply(this, arguments);\n    }\n\n    getCharacters();\n  }, []);\n  var classes = useStyles(); //POST METHOD TO SAVE THE RECORD\n\n  var getpatient = props.getpatientdetails.getpatient;\n  var PatientID = getpatient.row.patientId;\n  var visitId = getpatient.row.id; //console.log(getpatient);\n  //Save Assign Clinician \n\n  var _useState = useState({\n    present_consultation: '',\n    patientId: PatientID,\n    visitId: visitId,\n    consultation_notes: '',\n    formName: 'DRUG_ORDER_FORM',\n    serviceName: 'GENERAL_SERVICE'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      consult = _useState2[0],\n      setconsult = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newAllergy = _useState4[0],\n      setNewAllergy = _useState4[1]; //    console.log(clinician);\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showLoading = _useState6[0],\n      setShowLoading = _useState6[1];\n\n  var apiUrl = url + \"encounters/GENERAL_SERVICE/CONSULTATION_FORM/\" + PatientID;\n\n  var SaveDrug = function SaveDrug(e) {\n    e.preventDefault();\n    var data = {\n      formData: newAllergy,\n      present_consultation: consult.present_consultation,\n      patientId: PatientID,\n      visitId: visitId,\n      consultation_notes: consult.consultation_notes,\n      formName: 'CONSULTATION_FORM',\n      serviceName: 'GENERAL_SERVICE'\n    };\n    console.log(data);\n    axios.post(apiUrl, data).then(function (result) {\n      setShowLoading(false);\n      props.history.push('/checkedin-patients');\n      toast.success(\" Successful!\");\n    }).catch(function (error) {\n      console.log(error);\n      setShowLoading(false);\n      setconsult(false);\n    });\n  };\n\n  var onChange = function onChange(e) {\n    e.persist();\n    setconsult(_objectSpread({}, consult, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return React.createElement(Form, {\n    onSubmit: SaveDrug,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: cardStyle,\n    className: \" p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Drug Order\"), React.createElement(\"form\", {\n    className: classes.formroot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"select\",\n    name: \"maritalStatusId\",\n    id: \"maritalStatusId\",\n    value: consult.consultation_notes,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"maritalStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Marital Status\"), countries.map(function (_ref2) {\n    var label = _ref2.label,\n        value = _ref2.value;\n    return React.createElement(\"option\", {\n      key: value,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, label);\n  })))), React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Dosage Strength\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Drug Unit\",\n    value: consult.consultation_notes,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Dosage Frequency\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Frequency\",\n    value: consult.consultation_notes,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"middleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(DateTimePicker, {\n    time: false,\n    name: \"dateRegistration\",\n    id: \"dateRegistration\",\n    defaultValue: new Date(),\n    max: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Duration\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Duration\",\n    value: consult.consultation_notes,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Duration Unit\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"genderId\",\n    id: \"genderId\",\n    value: patient.genderId,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Days\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Weeks\")))), React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"hospitalNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, \"Enter Instruction\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"hospitalNumber\",\n    id: \"hospitalNumber\",\n    placeholder: \"Enter Instruction\",\n    value: consult.consultation_notes,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }))), showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"Save\")))))), React.createElement(Col, {\n    lg: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: cardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"Previous Order\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }), React.createElement(Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: cardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"Current Order\"))))))));\n}","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Hiv/Medication/Medication.jsx"],"names":["React","useState","makeStyles","CardBody","Col","Row","Form","Card","FormGroup","Label","Input","Typography","Button","SaveIcon","DateTimePicker","Moment","momentLocalizer","toast","Spinner","axios","url","locale","useStyles","theme","root2","flexGrow","width","backgroundColor","palette","background","paper","margin","spacing","bullet","display","transform","title","fontSize","pos","cardContent","padding","cardroot","height","alertmsge","marginTop","rootaccordia","accordiaheading","typography","pxToRem","fontWeight","fontWeightRegular","allergiesroot","justifyContent","flexWrap","checkboxroot","formControl","root","formroot","heading","secondaryHeading","color","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","link","primary","main","textDecoration","inforoot","cardStyle","borbderColor","marginBottom","Medication","props","apicountries","countries","setCountries","useEffect","getCharacters","fetch","response","json","body","map","genericName","id","label","value","classes","getpatient","getpatientdetails","PatientID","row","patientId","visitId","present_consultation","consultation_notes","formName","serviceName","consult","setconsult","newAllergy","setNewAllergy","showLoading","setShowLoading","apiUrl","SaveDrug","e","preventDefault","data","formData","console","log","post","then","result","history","push","success","catch","error","onChange","persist","target","name","Date","patient","genderId","button"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACIC,QADJ,EAEIC,GAFJ,EAGIC,GAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,QAUO,YAVP;AAWA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,0CAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,eAAP,MAA4B,sBAA5B,C,CACA;;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB,C,CAEA;;AACAL,MAAM,CAACM,MAAP,CAAc,IAAd;AACAL,eAAe;AAEf,IAAMM,SAAS,GAAGpB,UAAU,CAAC,UAAAqB,KAAK;AAAA,SAAK;AACnCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,CADL;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC,KAHrC;AAILC,MAAAA,MAAM,EAACR,KAAK,CAACS,OAAN,CAAc,CAAd,CAJF;AAKLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE,cADL;AAEJH,QAAAA,MAAM,EAAE,OAFJ;AAGJI,QAAAA,SAAS,EAAE;AAHP,OALH;AAUHC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OAVJ;AAcHC,MAAAA,GAAG,EAAE;AACHD,QAAAA,QAAQ,EAAE;AADP,OAdF;AAiBLE,MAAAA,WAAW,EAAC;AACRC,QAAAA,OAAO,EAAE;AADD,OAjBP;AAoBLC,MAAAA,QAAQ,EAAC;AACLV,QAAAA,MAAM,EAACR,KAAK,CAACS,OAAN,CAAc,CAAd,CADF;AAELU,QAAAA,MAAM,EAAE,MAAM;AAFT;AApBJ,KAD4B;AA2BjCC,IAAAA,SAAS,EAAC;AACNC,MAAAA,SAAS,EAAErB,KAAK,CAACS,OAAN,CAAc,CAAd;AADL,KA3BuB;AA8BjCa,IAAAA,YAAY,EAAE;AACVnB,MAAAA,KAAK,EAAE;AADG,KA9BmB;AAiCjCoB,IAAAA,eAAe,EAAE;AACbT,MAAAA,QAAQ,EAAEd,KAAK,CAACwB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADG;AAEbC,MAAAA,UAAU,EAAE1B,KAAK,CAACwB,UAAN,CAAiBG;AAFhB,KAjCgB;AAqCjCC,IAAAA,aAAa,EAAE;AACXjB,MAAAA,OAAO,EAAE,MADE;AAEXkB,MAAAA,cAAc,EAAE,QAFL;AAGXC,MAAAA,QAAQ,EAAE,MAHC;AAIX,eAAS;AACTtB,QAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,GAAd;AADC;AAJE,KArCkB;AA8CjCsB,IAAAA,YAAY,EAAE;AACVpB,MAAAA,OAAO,EAAE;AADC,KA9CmB;AAiDjCqB,IAAAA,WAAW,EAAE;AACTxB,MAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AADC,KAjDoB;AAqDjCwB,IAAAA,IAAI,EAAE;AACF,8BAAwB;AACxBzB,QAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADgB;AAExBN,QAAAA,KAAK,EAAE;AAFiB;AADtB,KArD2B;AA6DjC+B,IAAAA,QAAQ,EAAE;AACN,8BAAwB;AACxB1B,QAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADgB;AAExBN,QAAAA,KAAK,EAAE;AAFiB;AADlB,KA7DuB;AAoEjCgC,IAAAA,OAAO,EAAE;AACLrB,MAAAA,QAAQ,EAAEd,KAAK,CAACwB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB;AADL,KApEwB;AAuEjCW,IAAAA,gBAAgB,EAAE;AACdtB,MAAAA,QAAQ,EAAEd,KAAK,CAACwB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADI;AAEdY,MAAAA,KAAK,EAAErC,KAAK,CAACK,OAAN,CAAciC,IAAd,CAAmBC;AAFZ,KAvEe;AA2EjCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,aAAa,EAAE,QADb;AAEFtB,MAAAA,MAAM,EAAE,EAFN;AAGFhB,MAAAA,KAAK,EAAE;AAHL,KA3E2B;AAgFjCuC,IAAAA,OAAO,EAAE;AACLC,MAAAA,UAAU,EAAE;AADP,KAhFwB;AAmFjCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,SAAS,EAAE;AADP,KAnFyB;AAsFjCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,sBAAe/C,KAAK,CAACK,OAAN,CAAc2C,OAA7B,CADN;AAEJ/B,MAAAA,OAAO,EAAEjB,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAFL,KAtFyB;AA0FjCwC,IAAAA,IAAI,EAAE;AACFZ,MAAAA,KAAK,EAAErC,KAAK,CAACK,OAAN,CAAc6C,OAAd,CAAsBC,IAD3B;AAEFC,MAAAA,cAAc,EAAE,MAFd;AAGF,iBAAW;AACXA,QAAAA,cAAc,EAAE;AADL;AAHT,KA1F2B;AAiGjCC,IAAAA,QAAQ,EAAE;AACNlD,MAAAA,KAAK,EAAE,KADD;AAENK,MAAAA,MAAM,EAAE,EAFF;AAGNJ,MAAAA,eAAe,EAAE;AAHX;AAjGuB,GAAL;AAAA,CAAN,CAA5B;AAuGI,IAAMkD,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE,MADA;AAEdC,EAAAA,YAAY,EAAE;AAFA,CAAlB;AAMJ,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtC,MAAMC,YAAY,GAAG9D,GAAG,GAAC,2BAAzB;;AADsC,wBAEJpB,KAAK,CAACC,QAAN,CAAe,EAAf,CAFI;AAAA;AAAA,MAE/BkF,SAF+B;AAAA,MAEpBC,YAFoB,wBAGrC;;;AACCpF,EAAAA,KAAK,CAACqF,SAAN,CAAgB,YAAM;AAAA,aACLC,aADK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBC,KAAK,CAACL,YAAD,CAD9B;;AAAA;AACQM,gBAAAA,QADR;AAAA;AAAA,uBAEqBA,QAAQ,CAACC,IAAT,EAFrB;;AAAA;AAEQC,gBAAAA,IAFR;AAGEN,gBAAAA,YAAY,CAACM,IAAI,CAACC,GAAL,CAAS;AAAA,sBAAGC,WAAH,QAAGA,WAAH;AAAA,sBAAgBC,EAAhB,QAAgBA,EAAhB;AAAA,yBAA0B;AAAEC,oBAAAA,KAAK,EAAEF,WAAT;AAAsBG,oBAAAA,KAAK,EAAEF;AAA7B,mBAA1B;AAAA,iBAAT,CAAD,CAAZ,CAHF,CAIG;;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADoB;AAAA;AAAA;;AAOpBP,IAAAA,aAAa;AAEd,GATD,EASG,EATH;AAUF,MAAMU,OAAO,GAAG1E,SAAS,EAAzB,CAdsC,CAetC;;AAfsC,MAgB/B2E,UAhB+B,GAgBlBhB,KAAK,CAACiB,iBAhBY,CAgB/BD,UAhB+B;AAiBtC,MAAME,SAAS,GAAGF,UAAU,CAACG,GAAX,CAAeC,SAAjC;AACA,MAAMC,OAAO,GAAGL,UAAU,CAACG,GAAX,CAAeP,EAA/B,CAlBsC,CAmBvC;AACC;;AApBsC,kBAqBR5F,QAAQ,CAAC;AAC/BsG,IAAAA,oBAAoB,EAAE,EADS;AAE/BF,IAAAA,SAAS,EAAEF,SAFoB;AAG/BG,IAAAA,OAAO,EAACA,OAHuB;AAI/BE,IAAAA,kBAAkB,EAAC,EAJY;AAK/BC,IAAAA,QAAQ,EAAE,iBALqB;AAM/BC,IAAAA,WAAW,EAAE;AANkB,GAAD,CArBA;AAAA;AAAA,MAqB/BC,OArB+B;AAAA,MAqBtBC,UArBsB;;AAAA,mBA6BE3G,QAAQ,CAAC,EAAD,CA7BV;AAAA;AAAA,MA6B3B4G,UA7B2B;AAAA,MA6BfC,aA7Be,kBA+BtC;;;AA/BsC,mBAgCA7G,QAAQ,CAAC,KAAD,CAhCR;AAAA;AAAA,MAgC/B8G,WAhC+B;AAAA,MAgClBC,cAhCkB;;AAiCtC,MAAMC,MAAM,GAAG7F,GAAG,GAAC,+CAAJ,GAAoD+E,SAAnE;;AACA,MAAMe,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAMC,IAAI,GAAG;AACLC,MAAAA,QAAQ,EAAET,UADL;AAELN,MAAAA,oBAAoB,EAAEI,OAAO,CAACJ,oBAFzB;AAGLF,MAAAA,SAAS,EAAEF,SAHN;AAILG,MAAAA,OAAO,EAACA,OAJH;AAKLE,MAAAA,kBAAkB,EAAEG,OAAO,CAACH,kBALvB;AAMLC,MAAAA,QAAQ,EAAE,mBANL;AAOLC,MAAAA,WAAW,EAAE;AAPR,KAAb;AASAa,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAlG,IAAAA,KAAK,CAACsG,IAAN,CAAWR,MAAX,EAAmBI,IAAnB,EACKK,IADL,CACU,UAACC,MAAD,EAAY;AACdX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA/B,MAAAA,KAAK,CAAC2C,OAAN,CAAcC,IAAd,CAAmB,qBAAnB;AACA5G,MAAAA,KAAK,CAAC6G,OAAN,CAAc,cAAd;AACH,KALL,EAKOC,KALP,CAKa,UAACC,KAAD,EAAW;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACJhB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEC,KAVL;AAYC,GAzBD;;AA2BA,MAAMqB,QAAQ,GAAG,SAAXA,QAAW,CAACd,CAAD,EAAO;AACxBA,IAAAA,CAAC,CAACe,OAAF;AACAtB,IAAAA,UAAU,mBAAKD,OAAL,sBAAeQ,CAAC,CAACgB,MAAF,CAASC,IAAxB,EAA+BjB,CAAC,CAACgB,MAAF,CAASpC,KAAxC,GAAV;AACC,GAHD;;AAKF,SACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEmB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAErC,SAAd;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEmB,OAAO,CAAC5D,KAA/B;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAsD,IAAA,YAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIY;AAAM,IAAA,SAAS,EAAE4D,OAAO,CAACvC,QAAzB;AAAmC,IAAA,UAAU,MAA7C;AAA8C,IAAA,YAAY,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,iBAA1B;AAA4C,IAAA,EAAE,EAAC,iBAA/C;AACI,IAAA,KAAK,EAAEkD,OAAO,CAACH,kBADnB;AAEI,IAAA,QAAQ,EAAEyB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAIS9C,SAAS,CAACQ,GAAV,CAAc;AAAA,QAAGG,KAAH,SAAGA,KAAH;AAAA,QAAUC,KAAV,SAAUA,KAAV;AAAA,WACX;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,KADD,CADW;AAAA,GAAd,CAJT,CADJ,CADJ,CADA,EAeA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,gBAAxB;AAAyC,IAAA,EAAE,EAAC,gBAA5C;AAA6D,IAAA,WAAW,EAAC,WAAzE;AACI,IAAA,KAAK,EAAEa,OAAO,CAACH,kBADnB;AAEI,IAAA,QAAQ,EAAEyB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAfA,EAwBA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,gBAAxB;AAAyC,IAAA,EAAE,EAAC,gBAA5C;AAA6D,IAAA,WAAW,EAAC,WAAzE;AACI,IAAA,KAAK,EAAEtB,OAAO,CAACH,kBADnB;AAEI,IAAA,QAAQ,EAAEyB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAxBA,EAiCA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,KAAtB;AAA6B,IAAA,IAAI,EAAC,kBAAlC;AAAsD,IAAA,EAAE,EAAC,kBAAzD;AACA,IAAA,YAAY,EAAE,IAAII,IAAJ,EADd;AAC0B,IAAA,GAAG,EAAE,IAAIA,IAAJ,EAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAjCA,EAwCA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,gBAAxB;AAAyC,IAAA,EAAE,EAAC,gBAA5C;AAA6D,IAAA,WAAW,EAAC,UAAzE;AACA,IAAA,KAAK,EAAE1B,OAAO,CAACH,kBADf;AAEA,IAAA,QAAQ,EAAEyB,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAxCA,EAiDA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,EAAE,EAAC,UAAxC;AAAmD,IAAA,KAAK,EAAEK,OAAO,CAACC,QAAlE;AAA4E,IAAA,QAAQ,EAAEN,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CAFA,CADR,CAjDA,EA2DC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,gBAAxB;AAAyC,IAAA,EAAE,EAAC,gBAA5C;AAA6D,IAAA,WAAW,EAAC,mBAAzE;AACI,IAAA,KAAK,EAAEtB,OAAO,CAACH,kBADnB;AAEI,IAAA,QAAQ,EAAEyB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADP,CA3DD,EAoEKlB,WAAW,IAER,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CAtER,EA0EK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1EL,EA4EQ,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAEf,OAAO,CAACwC,MAHvB;AAKI,IAAA,SAAS,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5ER,CAFR,CAJZ,CADF,CADF,CADN,EAmGM,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAE3D,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEmB,OAAO,CAAC5D,KAA/B;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAsD,IAAA,YAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAEyC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEmB,OAAO,CAAC5D,KAA/B;AAAsC,IAAA,KAAK,EAAC,SAA5C;AAAsD,IAAA,YAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,CADJ,CAZJ,CADJ,CAnGN,CADJ,CADJ;AAmID","sourcesContent":["import React, {useState}  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    CardBody,\n    Col,\n    Row,\n    Form,\n    Card,\n    FormGroup,\n    Label,\n    Input\n    \n} from 'reactstrap';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { DateTimePicker } from 'react-widgets';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\n//import moment from 'moment';\nimport { toast } from \"react-toastify\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';  \nimport {url} from 'axios/url';\n\n//Dtate Picker package\nMoment.locale('en');\nmomentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n    root2: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      margin:theme.spacing(7),\n      bullet: {\n          display: 'inline-block',\n          margin: '0 2px',\n          transform: 'scale(0.8)',\n        },\n        title: {\n          fontSize: 12,\n            \n        },\n        pos: {\n          fontSize: 11,\n        },\n      cardContent:{\n          padding: 2,\n      },\n      cardroot:{\n          margin:theme.spacing(1),\n          height: 250 + 'px !important' ,\n      }\n      \n      },\n      alertmsge:{\n          marginTop: theme.spacing(2),\n      },\n      rootaccordia: {\n          width: '100%',\n      },\n      accordiaheading: {\n          fontSize: theme.typography.pxToRem(15),\n          fontWeight: theme.typography.fontWeightRegular,\n      },\n      allergiesroot: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          '& > *': {\n          margin: theme.spacing(0.5),\n          },\n      },\n      \n      checkboxroot: {\n          display: 'flex',\n      },\n      formControl: {\n          margin: theme.spacing(3),\n      },\n      \n      root: {\n          '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200,\n          },\n          \n      },\n  \n      formroot: {\n          '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: 200,\n          },\n      },\n  \n      heading: {\n          fontSize: theme.typography.pxToRem(15),\n      },\n      secondaryHeading: {\n          fontSize: theme.typography.pxToRem(15),\n          color: theme.palette.text.secondary,\n      },\n      icon: {\n          verticalAlign: 'bottom',\n          height: 20,\n          width: 20,\n      },\n      details: {\n          alignItems: 'center',\n      },\n      column: {\n          flexBasis: '33.33%',\n      },\n      helper: {\n          borderLeft: `2px solid ${theme.palette.divider}`,\n          padding: theme.spacing(1, 2),\n      },\n      link: {\n          color: theme.palette.primary.main,\n          textDecoration: 'none',\n          '&:hover': {\n          textDecoration: 'underline',\n          },\n      },\n      inforoot: {\n          width: '95%',\n          margin: 20,\n          backgroundColor: '#eee',\n      },\n      })); \n    const cardStyle = {\n        borbderColor: '#fff',\n        marginBottom: 10,\n    };\n\n\nexport default function Medication(props) {\n    const apicountries = url+\"encounters/pharmacy/drugs\";\n    const [countries, setCountries] = React.useState([]);\n     //Get countries     \n      React.useEffect(() => {\n        async function getCharacters() {\n          const response = await fetch(apicountries);\n          const body = await response.json();\n          setCountries(body.map(({ genericName, id }) => ({ label: genericName, value: id })));\n           //console.log(body);\n        }\n        getCharacters();\n       \n      }, []);\n    const classes = useStyles(); \n    //POST METHOD TO SAVE THE RECORD\n    const {getpatient} =props.getpatientdetails ;\n    const PatientID = getpatient.row.patientId;\n    const visitId = getpatient.row.id;\n   //console.log(getpatient);\n    //Save Assign Clinician \n    const [consult, setconsult] = useState({ \n            present_consultation: '', \n            patientId: PatientID, \n            visitId:visitId,\n            consultation_notes:'',\n            formName: 'DRUG_ORDER_FORM',\n            serviceName: 'GENERAL_SERVICE' \n        }); \n        const [newAllergy, setNewAllergy] = useState([]);\n\n    //    console.log(clinician);\n    const [showLoading, setShowLoading] = useState(false);  \n    const apiUrl = url+\"encounters/GENERAL_SERVICE/CONSULTATION_FORM/\"+PatientID;  \n    const SaveDrug = (e) => { \n    e.preventDefault();  \n\n    const data = {\n            formData :newAllergy,\n            present_consultation: consult.present_consultation, \n            patientId: PatientID, \n            visitId:visitId,\n            consultation_notes: consult.consultation_notes,\n            formName: 'CONSULTATION_FORM',\n            serviceName: 'GENERAL_SERVICE'\n    }; \n    console.log(data);\n    axios.post(apiUrl, data)\n        .then((result) => {          \n            setShowLoading(false);\n            props.history.push('/checkedin-patients')\n            toast.success(\" Successful!\");\n        }).catch((error) => {\n            console.log(error);\n        setShowLoading(false)\n        setconsult(false);\n\n        }\n        ); \n    };\n\n    const onChange = (e) => {\n    e.persist();     \n    setconsult({...consult, [e.target.name]: e.target.value});\n    } \n\n  return (\n      <Form onSubmit={SaveDrug}>\n          <Row>\n                <Col lg={5} >\n                  <Card  style={cardStyle} className=\" p-3\">\n                    <CardBody>\n                        <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                        Drug Order\n                        </Typography>\n                                <form className={classes.formroot} noValidate autoComplete=\"off\">\n                                        \n                                        <div>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Input type=\"select\" name=\"maritalStatusId\" id=\"maritalStatusId\" \n                                                    value={consult.consultation_notes}\n                                                    onChange={onChange}>\n                                                    <Label for=\"maritalStatus\">Marital Status</Label>\n                                                        {countries.map(({ label, value }) => (\n                                                            <option key={value} value={value}>\n                                                            {label}\n                                                            </option>\n                                                        ))}\n                                                    </Input>\n                                            </FormGroup>  \n                                        </Col>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                            <Label for=\"hospitalNumber\">Dosage Strength</Label>\n                                                <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Drug Unit\" \n                                                    value={consult.consultation_notes}\n                                                    onChange={onChange}\n                                                />\n                                            </FormGroup>  \n                                        </Col>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                            <Label for=\"hospitalNumber\">Dosage Frequency</Label>\n                                                <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Frequency\" \n                                                    value={consult.consultation_notes}\n                                                    onChange={onChange}\n                                                />\n                                            </FormGroup>  \n                                        </Col>\n                                        <Col md={12}>\n                                            <Label for=\"middleName\">Start Date</Label>\n                                \n                                            <DateTimePicker time={false} name=\"dateRegistration\"  id=\"dateRegistration\"   \n                                            defaultValue={new Date()} max={new Date()}\n                                            />\n                                        </Col>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                            <Label for=\"hospitalNumber\">Duration</Label>\n                                                <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Duration\" \n                                                value={consult.consultation_notes}\n                                                onChange={onChange}\n                                                />\n                                            </FormGroup>  \n                                         </Col>\n                                        <Col md={12}>\n                                                <FormGroup>\n                                                <Label for=\"hospitalNumber\">Duration Unit</Label>\n                                                <Input type=\"select\" name=\"genderId\" id=\"genderId\" value={patient.genderId} onChange={onChange} >\n                                                    <option value=\"1\">Days</option>\n                                                    <option value=\"2\">Weeks</option>\n                                                    \n                                                </Input>\n                                                </FormGroup>  \n                                        </Col>\n                                         <Col md={12}>\n                                                <FormGroup>\n                                                <Label for=\"hospitalNumber\">Enter Instruction</Label>\n                                                    <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Enter Instruction\" \n                                                        value={consult.consultation_notes}\n                                                        onChange={onChange}\n                                                    />\n                                                </FormGroup>  \n                                         </Col>\n                                            {showLoading && \n                    \n                                                <Spinner animation=\"border\" role=\"status\">\n                                                <span className=\"sr-only\">Loading...</span>\n                                                </Spinner> \n                                            } \n                                             <br/>\n\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.button}\n                                                \n                                                    startIcon={<SaveIcon />}\n                                                >\n                                                    Save\n                                                </Button>\n                                        </div>\n                                    </form> \n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg={7} >\n                    <Row>\n                        <Col lg={12} >\n                            <Card  style={cardStyle} >\n                                <CardBody>\n                                    <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                            Previous Order\n                                    </Typography>                   \n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <br/>\n                        <br/>\n                        <Col lg={12} >\n                            <Card  style={cardStyle} >\n                                <CardBody>\n                                    <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                            Current Order\n                                    </Typography>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                  \n                </Col>\n               \n              </Row>\n      </Form>\n    \n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}