{"ast":null,"code":"import _objectSpread from \"/Users/matosky/react-reduction1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/matosky/react-reduction1/src/components/Hiv/Medication/Medication.jsx\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CardBody, Col, Row } from 'reactstrap';\nexport default function Grouped() {\n  var classes = useStyles();\n  var options = top100Films.map(function (option) {\n    var firstLetter = option.title[0].toUpperCase();\n    return _objectSpread({\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter\n    }, option);\n  });\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: cardStyle,\n    className: \" p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Drug Order\"), React.createElement(\"form\", {\n    className: classes.formroot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"grouped-demo\",\n    options: options.sort(function (a, b) {\n      return -b.firstLetter.localeCompare(a.firstLetter);\n    }),\n    groupBy: function groupBy(option) {\n      return option.firstLetter;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.title;\n    },\n    style: {\n      width: 300\n    },\n    renderInput: function renderInput(params) {\n      return React.createElement(TextField, Object.assign({}, params, {\n        label: \"With categories\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    disabled: true,\n    id: \"outlined-required\",\n    label: \"Drug Unit\",\n    defaultValue: \"Drug Unit\",\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-password-input\",\n    label: \"Frequency\",\n    autoComplete: \"current-password\",\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-read-only-input\",\n    label: \"Start Date\",\n    defaultValue: \"Start Date\",\n    InputProps: {\n      readOnly: true\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-number\",\n    label: \"Duration\",\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-search\",\n    label: \"Duration Unit\",\n    type: \"text\",\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-helperText\",\n    label: \"Enter Instruction\",\n    defaultValue: \"Enter Instruction\",\n    variant: \"outlined\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Save\")))))), React.createElement(Col, {\n    lg: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: cardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Previous Order\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: cardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"primary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Current Order\"))))))));\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nvar top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'LÃ©on: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALLÂ·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'AmÃ©lie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/matosky/react-reduction1/src/components/Hiv/Medication/Medication.jsx"],"names":["React","TextField","Autocomplete","CardBody","Col","Row","Grouped","classes","useStyles","options","top100Films","map","option","firstLetter","title","toUpperCase","test","cardStyle","formroot","sort","a","b","localeCompare","width","params","readOnly","shrink","button","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n    CardBody,\n    Col,\n    Row,\n    \n} from 'reactstrap';\n\n\nexport default function Grouped() {\n\n    const classes = useStyles(); \n  const options = top100Films.map(option => {\n    const firstLetter = option.title[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n      <Form >\n          <Row>\n                <Col lg={4} >\n                  <Card  style={cardStyle} className=\" p-3\">\n                    <CardBody>\n                        <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                        Drug Order\n                        </Typography>\n                                <form className={classes.formroot} noValidate autoComplete=\"off\">\n                                        \n                                        <div>\n                                        <Autocomplete\n                                            id=\"grouped-demo\"\n                                            options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                                            groupBy={option => option.firstLetter}\n                                            getOptionLabel={option => option.title}\n                                            style={{ width: 300 }}\n                                            renderInput={params => <TextField {...params} label=\"With categories\" variant=\"outlined\" />}\n                                        />\n                                            <TextField\n                                            disabled\n                                            id=\"outlined-required\"\n                                            label=\"Drug Unit\"\n                                            defaultValue=\"Drug Unit\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            />\n                                            <TextField\n                                            id=\"outlined-password-input\"\n                                            label=\"Frequency\"\n                                            autoComplete=\"current-password\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            />\n                                            <TextField\n                                            id=\"outlined-read-only-input\"\n                                            label=\"Start Date\"\n                                            defaultValue=\"Start Date\"\n                                            InputProps={{\n                                                readOnly: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            />\n                                            <TextField\n                                            id=\"outlined-number\"\n                                            label=\"Duration\"\n                                            type=\"number\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            />\n                                            <TextField id=\"outlined-search\" label=\"Duration Unit\" type=\"text\" variant=\"outlined\" size=\"small\"/>\n                                            <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"Enter Instruction\"\n                                            defaultValue=\"Enter Instruction\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            />\n                                             <br/>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        className={classes.button}\n                                                    \n                                                        startIcon={<SaveIcon />}\n                                                    >\n                                                        Save\n                                                    </Button>\n                                        </div>\n                                    </form> \n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg={8} >\n                    <Row>\n                        <Col lg={12} >\n                            <Card  style={cardStyle} >\n                                <CardBody>\n                                    <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                            Previous Order\n                                    </Typography>                   \n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <br/>\n                        <br/>\n                        <Col lg={12} >\n                            <Card  style={cardStyle} >\n                                <CardBody>\n                                    <Typography className={classes.title} color=\"primary\" gutterBottom>\n                                            Current Order\n                                    </Typography>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                  \n                </Col>\n               \n              </Row>\n      </Form>\n    \n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'LÃ©on: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALLÂ·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'AmÃ©lie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n];"]},"metadata":{},"sourceType":"module"}